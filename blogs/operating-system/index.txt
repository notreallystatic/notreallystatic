1:"$Sreact.fragment"
2:I[3704,["746","static/chunks/746-63a0b1de495cca41.js","177","static/chunks/app/layout-9d497b736cfdbf19.js"],""]
3:I[721,["746","static/chunks/746-63a0b1de495cca41.js","177","static/chunks/app/layout-9d497b736cfdbf19.js"],"default"]
4:I[5244,[],""]
5:I[3866,[],""]
7:I[6213,[],"OutletBoundary"]
9:I[6213,[],"MetadataBoundary"]
b:I[6213,[],"ViewportBoundary"]
d:I[4835,[],""]
:HL["/portfolio/_next/static/media/4f05ba3a6752a328-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/portfolio/_next/static/css/421c02c277670652.css","style"]
6:T268ab,<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Operating System</title><style>
/* cspell:disable-file */
/* webkit printing magic: print all background colors */
html {
	-webkit-print-color-adjust: exact;
}
* {
	box-sizing: border-box;
	-webkit-print-color-adjust: exact;
}

html,
body {
	margin: 0;
	padding: 0;
}
@media only screen {
	body {
		margin: 2em auto;
		max-width: 900px;
		color: rgb(55, 53, 47);
	}
}

body {
	line-height: 1.5;
	white-space: pre-wrap;
}

a,
a.visited {
	color: inherit;
	text-decoration: underline;
}

.pdf-relative-link-path {
	font-size: 80%;
	color: #444;
}

h1,
h2,
h3 {
	letter-spacing: -0.01em;
	line-height: 1.2;
	font-weight: 600;
	margin-bottom: 0;
}

.page-title {
	font-size: 2.5rem;
	font-weight: 700;
	margin-top: 0;
	margin-bottom: 0.75em;
}

h1 {
	font-size: 1.875rem;
	margin-top: 1.875rem;
}

h2 {
	font-size: 1.5rem;
	margin-top: 1.5rem;
}

h3 {
	font-size: 1.25rem;
	margin-top: 1.25rem;
}

.source {
	border: 1px solid #ddd;
	border-radius: 3px;
	padding: 1.5em;
	word-break: break-all;
}

.callout {
	border-radius: 3px;
	padding: 1rem;
}

figure {
	margin: 1.25em 0;
	page-break-inside: avoid;
}

figcaption {
	opacity: 0.5;
	font-size: 85%;
	margin-top: 0.5em;
}

mark {
	background-color: transparent;
}

.indented {
	padding-left: 1.5em;
}

hr {
	background: transparent;
	display: block;
	width: 100%;
	height: 1px;
	visibility: visible;
	border: none;
	border-bottom: 1px solid rgba(55, 53, 47, 0.09);
}

img {
	max-width: 100%;
}

@media only print {
	img {
		max-height: 100vh;
		object-fit: contain;
	}
}

@page {
	margin: 1in;
}

.collection-content {
	font-size: 0.875rem;
}

.column-list {
	display: flex;
	justify-content: space-between;
}

.column {
	padding: 0 1em;
}

.column:first-child {
	padding-left: 0;
}

.column:last-child {
	padding-right: 0;
}

.table_of_contents-item {
	display: block;
	font-size: 0.875rem;
	line-height: 1.3;
	padding: 0.125rem;
}

.table_of_contents-indent-1 {
	margin-left: 1.5rem;
}

.table_of_contents-indent-2 {
	margin-left: 3rem;
}

.table_of_contents-indent-3 {
	margin-left: 4.5rem;
}

.table_of_contents-link {
	text-decoration: none;
	opacity: 0.7;
	border-bottom: 1px solid rgba(55, 53, 47, 0.18);
}

table,
th,
td {
	border: 1px solid rgba(55, 53, 47, 0.09);
	border-collapse: collapse;
}

table {
	border-left: none;
	border-right: none;
}

th,
td {
	font-weight: normal;
	padding: 0.25em 0.5em;
	line-height: 1.5;
	min-height: 1.5em;
	text-align: left;
}

th {
	color: rgba(55, 53, 47, 0.6);
}

ol,
ul {
	margin: 0;
	margin-block-start: 0.6em;
	margin-block-end: 0.6em;
}

li > ol:first-child,
li > ul:first-child {
	margin-block-start: 0.6em;
}

ul > li {
	list-style: disc;
}

ul.to-do-list {
	padding-inline-start: 0;
}

ul.to-do-list > li {
	list-style: none;
}

.to-do-children-checked {
	text-decoration: line-through;
	opacity: 0.375;
}

ul.toggle > li {
	list-style: none;
}

ul {
	padding-inline-start: 1.7em;
}

ul > li {
	padding-left: 0.1em;
}

ol {
	padding-inline-start: 1.6em;
}

ol > li {
	padding-left: 0.2em;
}

.mono ol {
	padding-inline-start: 2em;
}

.mono ol > li {
	text-indent: -0.4em;
}

.toggle {
	padding-inline-start: 0em;
	list-style-type: none;
}

/* Indent toggle children */
.toggle > li > details {
	padding-left: 1.7em;
}

.toggle > li > details > summary {
	margin-left: -1.1em;
}

.selected-value {
	display: inline-block;
	padding: 0 0.5em;
	background: rgba(206, 205, 202, 0.5);
	border-radius: 3px;
	margin-right: 0.5em;
	margin-top: 0.3em;
	margin-bottom: 0.3em;
	white-space: nowrap;
}

.collection-title {
	display: inline-block;
	margin-right: 1em;
}

.page-description {
	margin-bottom: 2em;
}

.simple-table {
	margin-top: 1em;
	font-size: 0.875rem;
	empty-cells: show;
}
.simple-table td {
	height: 29px;
	min-width: 120px;
}

.simple-table th {
	height: 29px;
	min-width: 120px;
}

.simple-table-header-color {
	background: rgb(247, 246, 243);
	color: black;
}
.simple-table-header {
	font-weight: 500;
}

time {
	opacity: 0.5;
}

.icon {
	display: inline-block;
	max-width: 1.2em;
	max-height: 1.2em;
	text-decoration: none;
	vertical-align: text-bottom;
	margin-right: 0.5em;
}

img.icon {
	border-radius: 3px;
}

.user-icon {
	width: 1.5em;
	height: 1.5em;
	border-radius: 100%;
	margin-right: 0.5rem;
}

.user-icon-inner {
	font-size: 0.8em;
}

.text-icon {
	border: 1px solid #000;
	text-align: center;
}

.page-cover-image {
	display: block;
	object-fit: cover;
	width: 100%;
	max-height: 30vh;
}

.page-header-icon {
	font-size: 3rem;
	margin-bottom: 1rem;
}

.page-header-icon-with-cover {
	margin-top: -0.72em;
	margin-left: 0.07em;
}

.page-header-icon img {
	border-radius: 3px;
}

.link-to-page {
	margin: 1em 0;
	padding: 0;
	border: none;
	font-weight: 500;
}

p > .user {
	opacity: 0.5;
}

td > .user,
td > time {
	white-space: nowrap;
}

input[type="checkbox"] {
	transform: scale(1.5);
	margin-right: 0.6em;
	vertical-align: middle;
}

p {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.image {
	border: none;
	margin: 1.5em 0;
	padding: 0;
	border-radius: 0;
	text-align: center;
}

.code,
code {
	background: rgba(135, 131, 120, 0.15);
	border-radius: 3px;
	padding: 0.2em 0.4em;
	border-radius: 3px;
	font-size: 85%;
	tab-size: 2;
}

code {
	color: #eb5757;
}

.code {
	padding: 1.5em 1em;
}

.code-wrap {
	white-space: pre-wrap;
	word-break: break-all;
}

.code > code {
	background: none;
	padding: 0;
	font-size: 100%;
	color: inherit;
}

blockquote {
	font-size: 1.25em;
	margin: 1em 0;
	padding-left: 1em;
	border-left: 3px solid rgb(55, 53, 47);
}

.bookmark {
	text-decoration: none;
	max-height: 8em;
	padding: 0;
	display: flex;
	width: 100%;
	align-items: stretch;
}

.bookmark-title {
	font-size: 0.85em;
	overflow: hidden;
	text-overflow: ellipsis;
	height: 1.75em;
	white-space: nowrap;
}

.bookmark-text {
	display: flex;
	flex-direction: column;
}

.bookmark-info {
	flex: 4 1 180px;
	padding: 12px 14px 14px;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

.bookmark-image {
	width: 33%;
	flex: 1 1 180px;
	display: block;
	position: relative;
	object-fit: cover;
	border-radius: 1px;
}

.bookmark-description {
	color: rgba(55, 53, 47, 0.6);
	font-size: 0.75em;
	overflow: hidden;
	max-height: 4.5em;
	word-break: break-word;
}

.bookmark-href {
	font-size: 0.75em;
	margin-top: 0.25em;
}

.sans { font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }
.code { font-family: "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace; }
.serif { font-family: Lyon-Text, Georgia, ui-serif, serif; }
.mono { font-family: iawriter-mono, Nitti, Menlo, Courier, monospace; }
.pdf .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK JP'; }
.pdf:lang(zh-CN) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC'; }
.pdf:lang(zh-TW) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK TC'; }
.pdf:lang(ko-KR) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK KR'; }
.pdf .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK JP'; }
.pdf:lang(zh-CN) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC'; }
.pdf:lang(zh-TW) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK TC'; }
.pdf:lang(ko-KR) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK KR'; }
.pdf .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK JP'; }
.pdf:lang(zh-CN) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK SC'; }
.pdf:lang(zh-TW) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK TC'; }
.pdf:lang(ko-KR) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK KR'; }
.pdf .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK JP'; }
.pdf:lang(zh-CN) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC'; }
.pdf:lang(zh-TW) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK TC'; }
.pdf:lang(ko-KR) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK KR'; }
.highlight-default {
	color: rgba(55, 53, 47, 1);
}
.highlight-gray {
	color: rgba(120, 119, 116, 1);
	fill: rgba(120, 119, 116, 1);
}
.highlight-brown {
	color: rgba(159, 107, 83, 1);
	fill: rgba(159, 107, 83, 1);
}
.highlight-orange {
	color: rgba(217, 115, 13, 1);
	fill: rgba(217, 115, 13, 1);
}
.highlight-yellow {
	color: rgba(203, 145, 47, 1);
	fill: rgba(203, 145, 47, 1);
}
.highlight-teal {
	color: rgba(68, 131, 97, 1);
	fill: rgba(68, 131, 97, 1);
}
.highlight-blue {
	color: rgba(51, 126, 169, 1);
	fill: rgba(51, 126, 169, 1);
}
.highlight-purple {
	color: rgba(144, 101, 176, 1);
	fill: rgba(144, 101, 176, 1);
}
.highlight-pink {
	color: rgba(193, 76, 138, 1);
	fill: rgba(193, 76, 138, 1);
}
.highlight-red {
	color: rgba(212, 76, 71, 1);
	fill: rgba(212, 76, 71, 1);
}
.highlight-default_background {
	color: rgba(55, 53, 47, 1);
}
.highlight-gray_background {
	background: rgba(241, 241, 239, 1);
}
.highlight-brown_background {
	background: rgba(244, 238, 238, 1);
}
.highlight-orange_background {
	background: rgba(251, 236, 221, 1);
}
.highlight-yellow_background {
	background: rgba(251, 243, 219, 1);
}
.highlight-teal_background {
	background: rgba(237, 243, 236, 1);
}
.highlight-blue_background {
	background: rgba(231, 243, 248, 1);
}
.highlight-purple_background {
	background: rgba(244, 240, 247, 0.8);
}
.highlight-pink_background {
	background: rgba(249, 238, 243, 0.8);
}
.highlight-red_background {
	background: rgba(253, 235, 236, 1);
}
.block-color-default {
	color: inherit;
	fill: inherit;
}
.block-color-gray {
	color: rgba(120, 119, 116, 1);
	fill: rgba(120, 119, 116, 1);
}
.block-color-brown {
	color: rgba(159, 107, 83, 1);
	fill: rgba(159, 107, 83, 1);
}
.block-color-orange {
	color: rgba(217, 115, 13, 1);
	fill: rgba(217, 115, 13, 1);
}
.block-color-yellow {
	color: rgba(203, 145, 47, 1);
	fill: rgba(203, 145, 47, 1);
}
.block-color-teal {
	color: rgba(68, 131, 97, 1);
	fill: rgba(68, 131, 97, 1);
}
.block-color-blue {
	color: rgba(51, 126, 169, 1);
	fill: rgba(51, 126, 169, 1);
}
.block-color-purple {
	color: rgba(144, 101, 176, 1);
	fill: rgba(144, 101, 176, 1);
}
.block-color-pink {
	color: rgba(193, 76, 138, 1);
	fill: rgba(193, 76, 138, 1);
}
.block-color-red {
	color: rgba(212, 76, 71, 1);
	fill: rgba(212, 76, 71, 1);
}
.block-color-default_background {
	color: inherit;
	fill: inherit;
}
.block-color-gray_background {
	background: rgba(241, 241, 239, 1);
}
.block-color-brown_background {
	background: rgba(244, 238, 238, 1);
}
.block-color-orange_background {
	background: rgba(251, 236, 221, 1);
}
.block-color-yellow_background {
	background: rgba(251, 243, 219, 1);
}
.block-color-teal_background {
	background: rgba(237, 243, 236, 1);
}
.block-color-blue_background {
	background: rgba(231, 243, 248, 1);
}
.block-color-purple_background {
	background: rgba(244, 240, 247, 0.8);
}
.block-color-pink_background {
	background: rgba(249, 238, 243, 0.8);
}
.block-color-red_background {
	background: rgba(253, 235, 236, 1);
}
.select-value-color-uiBlue { background-color: rgba(35, 131, 226, .07); }
.select-value-color-pink { background-color: rgba(245, 224, 233, 1); }
.select-value-color-purple { background-color: rgba(232, 222, 238, 1); }
.select-value-color-green { background-color: rgba(219, 237, 219, 1); }
.select-value-color-gray { background-color: rgba(227, 226, 224, 1); }
.select-value-color-transparentGray { background-color: rgba(227, 226, 224, 0); }
.select-value-color-translucentGray { background-color: rgba(0, 0, 0, 0.06); }
.select-value-color-orange { background-color: rgba(250, 222, 201, 1); }
.select-value-color-brown { background-color: rgba(238, 224, 218, 1); }
.select-value-color-red { background-color: rgba(255, 226, 221, 1); }
.select-value-color-yellow { background-color: rgba(253, 236, 200, 1); }
.select-value-color-blue { background-color: rgba(211, 229, 239, 1); }
.select-value-color-pageGlass { background-color: undefined; }
.select-value-color-washGlass { background-color: undefined; }

.checkbox {
	display: inline-flex;
	vertical-align: text-bottom;
	width: 16;
	height: 16;
	background-size: 16px;
	margin-left: 2px;
	margin-right: 5px;
}

.checkbox-on {
	background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%2358A9D7%22%2F%3E%0A%3Cpath%20d%3D%22M6.71429%2012.2852L14%204.9995L12.7143%203.71436L6.71429%209.71378L3.28571%206.2831L2%207.57092L6.71429%2012.2852Z%22%20fill%3D%22white%22%2F%3E%0A%3C%2Fsvg%3E");
}

.checkbox-off {
	background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%220.75%22%20y%3D%220.75%22%20width%3D%2214.5%22%20height%3D%2214.5%22%20fill%3D%22white%22%20stroke%3D%22%2336352F%22%20stroke-width%3D%221.5%22%2F%3E%0A%3C%2Fsvg%3E");
}
	
</style></head><body><article id="4f441f46-dc14-4d31-852e-be81e326e866" class="page sans"><header><img class="page-cover-image" src="https://images.unsplash.com/photo-1536395268859-7cf1233a5d55?ixlib=rb-1.2.1&amp;q=85&amp;fm=jpg&amp;crop=entropy&amp;cs=srgb" style="object-position:center 50%"/><div class="page-header-icon page-header-icon-with-cover"><span class="icon">💻</span></div><h1 class="page-title">Operating System</h1><p class="page-description"></p></header><div class="page-body"><nav id="489fa8eb-a1ae-4ff9-9367-fa3cb5685124" class="block-color-gray table_of_contents"><div class="table_of_contents-item table_of_contents-indent-0"><a class="table_of_contents-link" href="#98581e85-5944-4e49-8735-6e7d4b543b01"><mark class="highlight-red">Introduction</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#fde77b71-0f48-45e9-8fb1-6f3c92b645ac"><mark class="highlight-teal">Computer-System Architecture</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#66ea049d-5d5d-4719-9200-28b928a4aadd">Single-Processor Systems</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#860a0832-848b-4602-9026-f37ba3e97d0d">Multiprocessor Systems</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#897d5628-5729-492a-8fd2-e0226f400696">Clustered Systems</a></div><div class="table_of_contents-item table_of_contents-indent-0"><a class="table_of_contents-link" href="#f9132f8a-b4db-462e-8e0f-47e09a9119b6"><mark class="highlight-red">Process Concept</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#aa405d7f-64df-4488-b143-7e0dfa52fc8e">The Process</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#e2a8c80f-ec14-4ca6-801b-1314fffbca46">Process State</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#49f606e5-e9b6-4a8f-ac55-4841a06db187">Process Control Block</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#72f3aee6-a544-4078-85ed-70585056a4ae">Threads</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#a5f8724c-e0e2-42ca-a042-5a4f44389720"><mark class="highlight-teal">Process Scheduling</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#32fbd97d-c37e-48f9-ac16-f9ffa920df40">Scheduling Queues</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#b79b3191-84bf-48f8-8718-96ddad5dd5ce">Schedulers</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#6ae73ba6-ab44-4bcd-ab8f-b62e8337583d">Context Switch</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#145603d1-87a0-47ca-bcf2-cc964117d380"><mark class="highlight-teal">Interprocess Communication</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#d64cbd5a-fc45-4271-856d-33cfd83d2e9d">Shared Memory</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#981723dd-cb50-4ad9-bc0d-110f0380e7d5">Message-Passing Systems</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#38c5d9ed-464f-4ba0-bb61-da43a743ada2"><mark class="highlight-teal">Communication in Client-Server Systems</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#64728a6b-7231-42d9-8d8e-af0d8fbb737c">Sockets</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#800c2ebe-7a87-4d8c-b2ed-e01d90f55cf5">Remote Procedure Calls</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#8a3e6f1f-3fb6-4f25-9c06-c52c72994d54">Pipes</a></div><div class="table_of_contents-item table_of_contents-indent-0"><a class="table_of_contents-link" href="#b127c2b2-a691-45fa-abc7-5548f5921804"><mark class="highlight-red">Multithreaded Programming</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#fa44a1b5-5f6c-4faf-ae51-304cad3f1ab2">Benefits</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#b9e28187-400a-499f-88ef-ccc8262336b2"><mark class="highlight-teal">Multithreading Models</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#e23d7015-ebbb-42f8-a990-29b98a868bdb">Many-to-One Model</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#1e276af7-4ac6-43c3-872a-4fb91a1d766c">One-to-One Model</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#000ffc5a-2116-41a0-bc29-96ce380bab0a">Many-to-Many Model</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#63eba10a-2b85-438f-b90d-f7f89b2dfd23"><mark class="highlight-teal">Thread Libraries</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#0227f79f-756d-4e1f-bd37-27001dc52c92"><mark class="highlight-teal">Implicit Threading</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#a1d55e33-a5d2-4de9-9705-05c23cf6c3ee">Thread Pools</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#af40b191-cdaa-4f12-9cd6-2eb0ebb82dd7">OpenMP</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#b508e67a-e667-4313-93c0-322729bcddae">Grand Central Dispatch</a></div><div class="table_of_contents-item table_of_contents-indent-0"><a class="table_of_contents-link" href="#d45acd47-ec0f-477d-9e3b-1fca480e4efc"><mark class="highlight-red">Process Scheduling</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#8ba24c4a-1314-4aa7-a923-c678ab532fe6"><mark class="highlight-teal">Basic Concepts</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#106088bc-bdc4-4618-90be-ef6c972b2eb0">CPU Scheduler</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#efedda08-f893-43e2-911e-d1fb1951e10a"><mark class="highlight-teal">Scheduling Criteria</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#a84ae4ea-44b9-4fd4-9717-b731fcdb3682"><mark class="highlight-teal">Scheduling Alogrithms</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#10f02c9b-35e1-4271-9397-dac9311b12a0">First-Come, First-Served Scheduling</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#a884815c-b843-48c1-be23-3f755d45b9db">Shortest-Job-First Scheduling</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#6f7ffd47-b13b-4003-82b7-488c89ac4e52">Priority Scheduling</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#5019d848-b605-4ee5-b75d-93b326dda1b1">Round-Robin Scheduling</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#b00ee7c2-b64b-4f74-90bd-63fbf0b008f2">Multilevel Queue Scheduling</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#71032f10-7b0f-44a7-8f04-8c63590211c2">Multilevel Feedback Queue Scheduling</a></div><div class="table_of_contents-item table_of_contents-indent-0"><a class="table_of_contents-link" href="#41d69305-3e5b-4ea8-a9ea-b87b1d601d28">Synchronization</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#0581159f-463b-44b9-b932-95a4edf99e5c"><mark class="highlight-teal">The Critical-Section Problem</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#12390d2b-d589-48a2-bcfb-019a447ea387"><mark class="highlight-teal">Peterson&#x27;s Solution</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#f0817da6-78f4-42f5-9c57-2e7dde557fc4"><mark class="highlight-teal">Mutex Locks</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#8e95839d-b012-499e-ae4d-f3776914d651"><mark class="highlight-teal">Semaphores</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#775a6884-839f-4107-b2f6-7953b1a293f5">Semaphore Usage</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#6452b786-4a44-445a-a484-36ff8baa6472">Semaphore Implementation</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#6b16a2c0-806d-448b-b9e4-194b36bb6166">Deadlocks &amp; Starvation</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#1b45cddf-ed02-45ee-8503-5d6d6bd7c872"><mark class="highlight-teal">Classic Problems of Synchronization</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#2a4f7d4d-6dd2-41de-ac58-624d7439b31f">The Bounder-Buffer Problem</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#3caadd39-f5ca-49fe-b7ee-39d88102e65d">The Readers-Writers Problem</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#f847563c-5932-4c80-9fd2-a9832b31b9ac">The Dining-Philosophers Problem</a></div><div class="table_of_contents-item table_of_contents-indent-0"><a class="table_of_contents-link" href="#1229e658-ded2-48eb-9f4e-b3c073757a43"><mark class="highlight-red">Deadlocks</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#f6cfc946-86c3-4a52-9260-a6e63b455175"><mark class="highlight-teal">Deadlock Characterization</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#a3d7a8be-6566-43d7-9b4d-81681353f01f">Necessary Conditions</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#a6001e5d-d3a8-4141-8327-60eedae3f8d3">Resource-Allocation Graph</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#28a14edc-9983-43f5-ae67-70453256de5f"><mark class="highlight-teal">Methods for Handling Deadlocks</mark></a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#778a2dec-e7c8-4961-b278-2d90a0b61ff1"><mark class="highlight-teal">Deadlock Prevention</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#d4f6d4c1-7414-4464-b591-9c769fd7bab6">Mutual Exclusion</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#c22799c9-3689-4b25-a98d-275b9e118a7d">Hold and Wait</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#cadcb1eb-707e-40a6-810f-b5ffe6296c6b">No Preemption</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#4d07a157-b809-4d56-8460-4e005360e7ab">Circular Wait</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#d7692eeb-9d44-4d00-a24a-2cda71007437"><mark class="highlight-teal">Deadlock Avoidance</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#dac20ce0-0ed2-4743-9cd9-ad7e17996e99">Safe State</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#71eb2ccc-81a7-4a9f-bdd1-bc42c613223d">Resource-Allocation-Graph Algorithm</a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#965e5dd1-c9fb-460a-8801-8f63bcad6c89">Banker&#x27;s Algorithm</a></div><div class="table_of_contents-item table_of_contents-indent-1"><a class="table_of_contents-link" href="#3bb72abf-791a-4402-a759-aa1f16df7c73"><mark class="highlight-teal">Deadlock Detection</mark></a></div><div class="table_of_contents-item table_of_contents-indent-2"><a class="table_of_contents-link" href="#4f58bc81-2135-45dc-ac80-4e3f01671c6b">Single Instance of Each Resource Type</a></div></nav><h1 id="98581e85-5944-4e49-8735-6e7d4b543b01" class=""><mark class="highlight-red">Introduction</mark></h1><p id="41723cd0-9f70-4e68-9ede-c59eae14c06a" class="">An OS manages a computer&#x27;s hardware &amp; provides a platform for the application programs and acts as an intermediary between the computer user and the hardware.</p><figure id="6515ac89-2440-4ec7-803c-d0d6f2bc1ebf" class="image"><a href="/images/blogs/operating_system/Untitled.png"><img style="width:570.9871826171875px" src="/images/blogs/operating_system/Untitled.png"/></a></figure><h2 id="fde77b71-0f48-45e9-8fb1-6f3c92b645ac" class=""><mark class="highlight-teal">Computer-System Architecture</mark></h2><p id="e116b84a-762d-4dcb-8a72-e07c51790e33" class="">Computer Systems are generally categorized by the number of general-purpose processors used.</p><h3 id="66ea049d-5d5d-4719-9200-28b928a4aadd" class="">Single-Processor Systems</h3><ul id="8bdbc97e-0cef-414b-a595-b116f1836a1d" class="bulleted-list"><li style="list-style-type:disc">These have one main CPU for executing a general-purpose instruction set, including instructions from users.</li></ul><ul id="3c7d486b-5085-40eb-a75c-2d66b5216b26" class="bulleted-list"><li style="list-style-type:disc">Have other special-purpose processors as well(device-specific processors, such as disk, keyboard, and graphics controllers). </li></ul><h3 id="860a0832-848b-4602-9026-f37ba3e97d0d" class="">Multiprocessor Systems</h3><ul id="6e1ada34-a4bb-446e-944e-990a1b3eeeec" class="bulleted-list"><li style="list-style-type:disc">Have multiple processors(also knows as <em>parallel systems</em> or <em>multicore systems</em>).</li></ul><ul id="09fc5e2a-a356-4b2b-8290-08344b0a7b06" class="bulleted-list"><li style="list-style-type:disc">They offer <ul id="a5e9f997-4fb0-4d21-b092-5f80ddda441d" class="bulleted-list"><li style="list-style-type:circle">Increased throughput<strong>.</strong></li></ul><ul id="20b2e1af-ba62-494c-ad6a-8f8ffd0cff39" class="bulleted-list"><li style="list-style-type:circle">Economy to scale<strong>.</strong></li></ul><ul id="8ec9dcec-a193-4bfb-984f-f5ba6181242e" class="bulleted-list"><li style="list-style-type:circle">Increased reliability.</li></ul></li></ul><ul id="263e0a8b-dd72-4654-a875-c1680d0b05ba" class="toggle"><li><details open=""><summary>Can be further categorized into:</summary><ol type="1" id="af500dd0-8735-4e65-add6-e1b9771d2da6" class="numbered-list" start="1"><li><strong>Asymmetric Multiprocessing</strong>: Here, each processor is assigned a specific task. A boss processor controls the system; the other processor either looks to the boss for instructions or has predefined tasks.</li></ol><ol type="1" id="ba6d0132-be4d-495c-9c44-f6221dbae34a" class="numbered-list" start="2"><li><strong>Symmetric Multiprocessing</strong>: Most common systems use SMP, in which each processor performs all tasks within the OS. All processors are peers, no boss here. </li></ol></details></li></ul><h3 id="897d5628-5729-492a-8fd2-e0226f400696" class="">Clustered Systems</h3><ul id="919c1a00-f0b2-4cd2-9950-abc37a2d8ad9" class="bulleted-list"><li style="list-style-type:disc">Nodes(Computers) are attached to each other through a physical medium(like LAN).</li></ul><ul id="e3ff1468-7825-4d3a-9266-56da32be8beb" class="bulleted-list"><li style="list-style-type:disc">Offer high-availability.</li></ul><ul id="a3db9535-589a-4432-a609-49d2ac10c885" class="bulleted-list"><li style="list-style-type:disc">Similar to Multiprocess systems, these can also be categorized into <strong><em>asymmetric clustering</em></strong> &amp; <strong><em>symmetric clustering</em></strong>.</li></ul><ul id="785164ff-2874-4597-8d94-9f80c0e6670f" class="bulleted-list"><li style="list-style-type:disc">Applications need to be written so that they use parallelization.</li></ul><h1 id="f9132f8a-b4db-462e-8e0f-47e09a9119b6" class=""><mark class="highlight-red">Process Concept</mark></h1><h2 id="aa405d7f-64df-4488-b143-7e0dfa52fc8e" class="block-color-teal">The Process</h2><p id="f207870a-16c7-4cc6-a19f-2b6065a0bfe9" class="">A process is a program in execution. It needs certain resources, such as CPU time, memory, files, and I/O devices. </p><ul id="9237675f-49c0-4c21-a6c2-c263ea1d19a2" class="bulleted-list"><li style="list-style-type:disc">stack: stores the temporary data(function params, return addresses, local variables)</li></ul><ul id="9be0d89b-4891-4044-b0ad-4d2809a9b723" class="bulleted-list"><li style="list-style-type:disc">head: stores the dynamically allocated data</li></ul><ul id="4133380f-9ab8-4f5c-8125-25b7b8773380" class="bulleted-list"><li style="list-style-type:disc">data: contains global variables.</li></ul><ul id="3357fcb3-57f2-4bd7-b15f-48967393ed87" class="bulleted-list"><li style="list-style-type:disc">text: program code.</li></ul><figure id="b0e2b428-798b-4f79-ab2c-aaa66d34355e" class="image"><a href="/images/blogs/operating_system/Untitled1.png"><img style="width:270.9872131347656px" src="/images/blogs/operating_system/Untitled1.png"/></a></figure><h3 id="e2a8c80f-ec14-4ca6-801b-1314fffbca46" class="block-color-teal">Process State</h3><ul id="636f63c9-9da8-4589-ae2b-3d2b11c2324d" class="bulleted-list"><li style="list-style-type:disc"><strong>New</strong>: The process is being created.</li></ul><ul id="8899ec39-e5d1-4022-a0cf-92067d300e2f" class="bulleted-list"><li style="list-style-type:disc"><strong>Running</strong>: Instructions are being executed.</li></ul><ul id="ec2073dc-d2db-4621-a112-8836df8be933" class="bulleted-list"><li style="list-style-type:disc"><strong>Waiting</strong>: The process is waiting for some event to occur(I/O or similar).</li></ul><ul id="e7568d83-6606-4599-8d65-d38a5d3ce68c" class="bulleted-list"><li style="list-style-type:disc"><strong>Ready: </strong>The process is waiting to be assigned to a processor.</li></ul><ul id="544a81de-ff4a-493c-ab58-9af9726f5aaf" class="bulleted-list"><li style="list-style-type:disc"><strong>Terminated</strong>: The process has finished execution.</li></ul><figure id="da7c2179-0bb9-467a-9063-2f31bdcf3919" class="image"><a href="/operating_system/Untitled2.png"><img style="width:520.9871826171875px" src="/images/blogs/operating_system/Untitled2.png"/></a></figure><h3 id="49f606e5-e9b6-4a8f-ac55-4841a06db187" class="">Process Control Block</h3><ul id="e683a174-799a-4c47-b2fa-c42884855086" class="bulleted-list"><li style="list-style-type:disc">Each process is represented by a PCB in OS.</li></ul><ul id="8906dd98-764a-48b3-86b3-eea73dbfc701" class="bulleted-list"><li style="list-style-type:disc">also known as, <strong>Task Control Block</strong>.</li></ul><ul id="e2765084-0f8d-4f14-96df-3429099af4db" class="bulleted-list"><li style="list-style-type:disc"><strong>Process State</strong>: either of the above-mentioned states.</li></ul><ul id="b310aacb-c93c-4f2a-a9db-38ea5fdcdcd0" class="bulleted-list"><li style="list-style-type:disc"><strong>Program counter</strong>: indicates the address of the next instruction.</li></ul><ul id="13a6c391-9b39-4ffe-8afe-7fccc0cb4042" class="bulleted-list"><li style="list-style-type:disc"><strong>CPU registers</strong>: when a process preempts(in case of an interrupt or normally) then the value of the CPU registers needs to be saved somewhere in order to allow the process execution from the point where it was last halted.</li></ul><ul id="86e3159e-5a13-4755-98ec-3eff26438899" class="bulleted-list"><li style="list-style-type:disc"><strong>CPU-scheduling information</strong>: includes process priority, pointers to scheduling queues, and any other scheduling parameters.</li></ul><ul id="d68c2948-9f63-4633-9cc1-21142491e5cf" class="bulleted-list"><li style="list-style-type:disc"><strong>Memory-management information</strong>: contains information about items as the value of the base and limit registers and the page tables, or the segment tables, depending on the memory system used by the OS.</li></ul><ul id="5600cca2-a0fd-4a42-8c3d-d74d83e1e3ef" class="bulleted-list"><li style="list-style-type:disc"><strong>Accounting information</strong>: info about the amount of CPU and real-time used, time limits, account numbers, job or process numbers, etc...</li></ul><ul id="dfc0f6a0-2499-4275-8d1d-f4e0ded0e199" class="bulleted-list"><li style="list-style-type:disc"><strong>I/O status information</strong>: includes the list of—I/O devices allocated to the process, open files, etc...</li></ul><h3 id="72f3aee6-a544-4078-85ed-70585056a4ae" class="">Threads</h3><ul id="90c5f00d-d611-4aa6-bc3b-c704bea5b553" class="bulleted-list"><li style="list-style-type:disc">A thread performs one task at a time.</li></ul><ul id="90291da4-2354-49b3-b3c1-52cbf4f46c34" class="bulleted-list"><li style="list-style-type:disc">Most of the processes these days contain multiple threads.</li></ul><ul id="60eb72fd-56af-4461-8fa4-4578386d4173" class="bulleted-list"><li style="list-style-type:disc">If the system supports multithreading, the <strong>PCB</strong> is extended to include information for each thread. </li></ul><h2 id="a5f8724c-e0e2-42ca-a042-5a4f44389720" class=""><mark class="highlight-teal">Process Scheduling</mark></h2><p id="6ae524fc-ed34-4851-9308-b0203a87d9a1" class="">To increase the CPU utilization we run multiple processes at a time. In a time-sharing system, CPU switches among various processes so that users can interact with each program while it is running. To achieve this, the process scheduler selects an available process(from a pool of processes) for execution on the CPU.</p><h3 id="32fbd97d-c37e-48f9-ac16-f9ffa920df40" class="">Scheduling Queues</h3><ul id="e0a6dd68-d988-4a31-9f25-9791fbc43d54" class="bulleted-list"><li style="list-style-type:disc"><strong>job queue</strong>: New processes entering the system arrive here. It contains all the processes in the system.</li></ul><ul id="ebb5d2c3-7d05-443d-b1bc-d3cff1ae6a60" class="bulleted-list"><li style="list-style-type:disc"><strong>ready queue</strong>: Processes that are residing in the main memory and are ready to execute. Generally stored as a linked list. A ready-queue header contains pointers to the first and final PCBs in the list.</li></ul><ul id="f04440b3-145e-4c69-a20c-db6dfd2cbd38" class="bulleted-list"><li style="list-style-type:disc"><strong>device queue</strong>: List of processes waiting for a particular I/O device.</li></ul><h3 id="b79b3191-84bf-48f8-8718-96ddad5dd5ce" class="">Schedulers</h3><ul id="b4f12ffc-c82b-447c-99e4-17f5848bfb8c" class="bulleted-list"><li style="list-style-type:disc">A process migrates among the various scheduling queues throughout its lifetime. The OS must select, for scheduling purposes, processes from these queues in some fashion. the selection process is carried out by the appropriate <strong>schedulers</strong>.</li></ul><ul id="3f94d774-46c1-4ba7-b158-876aac570a8e" class="bulleted-list"><li style="list-style-type:disc"><strong>long-term scheduler</strong>: Often, in a batch system, more processes are submitted that can be executed immediately. These processes are spooled to a mass storage device, where they are kept for later execution. The <em><strong>long-term scheduler</strong></em>, or <em><strong>job scheduler</strong></em>, selects processes from this pool and loads them into memory for execution.<ul id="2f8b02d9-0253-4f95-94f1-8f34517384c3" class="bulleted-list"><li style="list-style-type:circle">controls the degree of multiprogramming.</li></ul><ul id="80e35458-5c05-46cf-b650-e5f5bf146113" class="bulleted-list"><li style="list-style-type:circle">should select a good process mix of <em>I/O-bound </em>&amp; <em>CPU-bound </em>processes to increase the system performance.</li></ul></li></ul><ul id="31284911-2657-4e89-8dd1-fda8fa37ab63" class="bulleted-list"><li style="list-style-type:disc"><strong>short-term scheduler</strong>: It selects processes that are ready to execute and allocates CPU to one of them. Also called <em><strong>CPU scheduler</strong></em>.</li></ul><ul id="f2dced87-b4d1-4e66-b453-46c46462b346" class="bulleted-list"><li style="list-style-type:disc"><strong>medium-term scheduler</strong>: In some systems(like time-sharing) it is sometimes advantageous to remove a process from memory(and from active contention for the CPU) &amp; thus reduce the degree of multiprogramming. Later, the process can be reintroduced into memory, and its execution can be continued where it left off(called <em><strong>swapping</strong></em>).</li></ul><h3 id="6ae73ba6-ab44-4bcd-ab8f-b62e8337583d" class="">Context Switch</h3><p id="28f6f41b-7d1d-47e0-b811-f198ec154264" class="">When a scheduler switches from one process to another, a state save of the current process and a state restore of a different process is required, this is called <em><strong>context switching</strong></em>. </p><h2 id="145603d1-87a0-47ca-bcf2-cc964117d380" class=""><mark class="highlight-teal">Interprocess Communication</mark></h2><ul id="1f608ae8-3e64-41db-92ce-d59b020a6472" class="bulleted-list"><li style="list-style-type:disc">A process is <mark class="highlight-orange"><em><strong>independent</strong></em></mark> if it cannot affect or be affected by the other processes executing in the system. Any process that does not share data with any other process is independent.</li></ul><ul id="acb0e3b1-0925-4701-b624-ae9e73bdaf2b" class="bulleted-list"><li style="list-style-type:disc">A process is <mark class="highlight-orange"><em><strong>cooperating</strong></em></mark> if it can affect or be affected by the other processes executing in the system. Any process that shares data with other processes is a cooperating process.</li></ul><ul id="f6853187-7c35-4838-9c72-1e4f6f83d794" class="bulleted-list"><li style="list-style-type:disc">Reasons to allow process cooperation:<ul id="baa5bb15-646c-4c25-b621-232207cc15aa" class="bulleted-list"><li style="list-style-type:circle">Information sharing</li></ul><ul id="9379608f-8c4f-4085-bb60-c34484fad5df" class="bulleted-list"><li style="list-style-type:circle">Computation speedup</li></ul><ul id="c8eb6ea3-0696-4d16-b9c7-6627e967e613" class="bulleted-list"><li style="list-style-type:circle">Modularity</li></ul><ul id="b3c92e3e-09d6-434a-99b6-083f9008cfb9" class="bulleted-list"><li style="list-style-type:circle">Convenience</li></ul></li></ul><ul id="2e553857-2d69-4d59-9af6-4f57fd3f9e88" class="bulleted-list"><li style="list-style-type:disc">Cooperating processes require an <em><strong>interprocess communication</strong></em>(IPC) mechanism that will allow them to exchange data and information. It can be achieved by: <em><strong>shared memory</strong></em> &amp;<em><strong> message passing.</strong></em></li></ul><h3 id="d64cbd5a-fc45-4271-856d-33cfd83d2e9d" class="">Shared Memory</h3><ul id="9ceffa32-db7c-48f7-903a-cbfca12fa72b" class="bulleted-list"><li style="list-style-type:disc">A region of memory is established which is shared by the cooperating processes.</li></ul><ul id="b652fbd5-17f0-44e7-9b51-cebfe08d7f6f" class="bulleted-list"><li style="list-style-type:disc">Processes exchange information by reading &amp; writing data to the shared region.</li></ul><ul id="3dded27f-e250-423f-9d1b-7357746b6396" class="bulleted-list"><li style="list-style-type:disc">It is faster than message passing.</li></ul><ul id="86d43ae5-8dd7-465d-81d1-d508a461be3f" class="bulleted-list"><li style="list-style-type:disc">System calls are required to establish a shared-memory region.</li></ul><ul id="12c39d49-bf42-4078-aad4-0d7ac2ce6bca" class="bulleted-list"><li style="list-style-type:disc">Processes are responsible for ensuring that they are not writing to the same location simultaneously.</li></ul><h3 id="981723dd-cb50-4ad9-bc0d-110f0380e7d5" class="">Message-Passing Systems</h3><ul id="2800931c-ecef-4392-b64b-8d68a7fcc46d" class="bulleted-list"><li style="list-style-type:disc">It provides a mechanism to allow processes to communicate and to synchronize their actions without sharing the same address space.</li></ul><ul id="5c8f64fa-8103-4ba7-bde7-734e8a0c2f88" class="bulleted-list"><li style="list-style-type:disc">Useful in a distributed environment, when the communicating processes may reside on different computers connected by a network.</li></ul><h2 id="38c5d9ed-464f-4ba0-bb61-da43a743ada2" class=""><mark class="highlight-teal">Communication in Client-Server Systems</mark></h2><h3 id="64728a6b-7231-42d9-8d8e-af0d8fbb737c" class="">Sockets</h3><ul id="ff083cc9-29f5-4b2e-a4dc-a52fe3da4ebb" class="bulleted-list"><li style="list-style-type:disc">Defined as an endpoint for communication.</li></ul><ul id="e19a2bbc-e7a9-42a7-a660-98b0d82e811b" class="bulleted-list"><li style="list-style-type:disc">A pair of processes communication over a network employs a pair of sockets—one for each process.</li></ul><ul id="da352dca-8caa-4cbc-b138-d429ca16c84a" class="bulleted-list"><li style="list-style-type:disc">A socket is identified by an IP address concatenated with a port number.</li></ul><ul id="5ee36ef7-93e7-468f-ad8f-88d60264f17b" class="bulleted-list"><li style="list-style-type:disc">Sockets use client-server architecture. The server waits for incoming client requests by listening to a specified port.</li></ul><ul id="2d60ee43-8f05-414b-b6df-50a08a3556f1" class="bulleted-list"><li style="list-style-type:disc">Once a request is received, the server accepts a connection from the client socket to complete the connection.</li></ul><ul id="c3a205c5-8f38-40d5-b3cb-960efd605725" class="bulleted-list"><li style="list-style-type:disc">Even though it is common &amp; efficient, it is considered a low-level form of communication between distributed processes. One reason is sockets allow only an unstructured stream of bytes to be exchanged between the communicating threads.<ul id="2ef2e72d-6bb1-4298-a405-95622ff0d441" class="bulleted-list"><li style="list-style-type:circle">It is the responsibility of the client or server to impose a structure on the data.</li></ul></li></ul><h3 id="800c2ebe-7a87-4d8c-b2ed-e01d90f55cf5" class="">Remote Procedure Calls</h3><ul id="3ff736d7-42c8-4ced-b716-a8f83c0679c8" class="bulleted-list"><li style="list-style-type:disc">It is based on extending the conventional local procedure calling so that the called procedure need not exist in the same address space as the calling procedure.</li></ul><ul id="cee5b31c-3a7e-443c-8b4c-f0006ba6341e" class="bulleted-list"><li style="list-style-type:disc">Messages exchanged are well structured.</li></ul><ul id="5c577217-797d-4d17-a41c-b9afab2aa4dd" class="bulleted-list"><li style="list-style-type:disc">Each message is addressed to an RPC daemon listening to a port on the remote system, and each contains an identifier specifying the function to execute and the parameters to pass to that function.</li></ul><h3 id="8a3e6f1f-3fb6-4f25-9c06-c52c72994d54" class="">Pipes</h3><ul id="9c6b2c22-a1cc-4773-81a9-3e27aefbd8da" class="bulleted-list"><li style="list-style-type:disc">A pipe acts as a conduit allowing two processes to communicate.</li></ul><ul id="049cfafc-91b2-49fc-bf9c-5dd8a74ea127" class="bulleted-list"><li style="list-style-type:disc"><strong>Ordinary Pipes</strong><ul id="2fb0f7a8-581d-49ca-8e99-47730ea54e08" class="bulleted-list"><li style="list-style-type:circle">These allow two processes to communicate in standard producer-consumer fashion.</li></ul><ul id="4c8fe8cc-6a15-4e3d-b40d-5f9af4cf0c51" class="bulleted-list"><li style="list-style-type:circle">The producer writes to one end of the pipe(the <mark class="highlight-orange">write-end</mark>) and the consumer reads from the other end(the <mark class="highlight-orange">read-end</mark>).</li></ul><ul id="8b4bcfb2-aac4-440f-8487-147fd8f1026b" class="bulleted-list"><li style="list-style-type:circle">Unidirectional, allowing only one-way communication.</li></ul><ul id="1e9efd83-8ccf-4e7b-b7a2-b26424544e38" class="bulleted-list"><li style="list-style-type:circle">If two-way communication is required, two pipes must be used.</li></ul></li></ul><ul id="bfb0c94b-559e-4719-8618-23a8ae6127ed" class="bulleted-list"><li style="list-style-type:disc"><strong>Named Pipes</strong><ul id="4de6e6f3-22e9-4aae-ab63-d609ab5a35ee" class="bulleted-list"><li style="list-style-type:circle">Communication can be bidirectional, and no parent-child relationship is required.</li></ul><ul id="fd064e62-f088-455c-a773-d92bb6c7f53c" class="bulleted-list"><li style="list-style-type:circle">Once a named pipe is established, several processes can use it for communication.</li></ul><ul id="24c27c86-57df-4e31-a10d-c1b86663f6fd" class="bulleted-list"><li style="list-style-type:circle">Names pipes continue to exist after communicating processes have finished.</li></ul></li></ul><h1 id="b127c2b2-a691-45fa-abc7-5548f5921804" class=""><mark class="highlight-red">Multithreaded Programming</mark></h1><ul id="e2357248-a4d1-44b9-8ac1-1a5e9ca21a38" class="bulleted-list"><li style="list-style-type:disc">A thread is a basic unit of CPU utilization; it comprises a thread ID, a program counter, a register set, &amp; a stack.</li></ul><ul id="530bb8de-b483-4b26-be75-589d0b1f3a18" class="bulleted-list"><li style="list-style-type:disc">It shares with other threads belonging to the same process its code section, data section, and other operating-system resources, such as open files and signals.</li></ul><ul id="89cebccf-9f96-4e90-952b-20198f6f24c6" class="bulleted-list"><li style="list-style-type:disc">If a process has multiple threads of control, it can perform more than one task at a time.</li></ul><h3 id="fa44a1b5-5f6c-4faf-ae51-304cad3f1ab2" class="">Benefits</h3><ul id="49978c09-37db-497d-a59d-b45e3f9087a1" class="bulleted-list"><li style="list-style-type:disc">Responsiveness</li></ul><ul id="3abd63da-e3a7-4c05-ad08-d2a150c23c14" class="bulleted-list"><li style="list-style-type:disc">Resource Sharing</li></ul><ul id="f91318bb-411e-47d5-b237-a821e70ba5ce" class="bulleted-list"><li style="list-style-type:disc">Economy</li></ul><ul id="c25b01b2-dab2-40e9-8caf-1d623dc83ebf" class="bulleted-list"><li style="list-style-type:disc">Scalability</li></ul><h2 id="b9e28187-400a-499f-88ef-ccc8262336b2" class=""><mark class="highlight-teal">Multithreading Models</mark></h2><p id="1460a35d-d443-4f41-97c3-a75df7e4aef6" class="">Support for threads may be provided either at the user level, for <mark class="highlight-orange">user threads</mark>, or by the kernel, for <mark class="highlight-orange">kernel threads</mark>. User threads are supported above the kernel &amp; are managed without kernel support. whereas kernel threads are supported &amp; managed directly by the OS.</p><h3 id="e23d7015-ebbb-42f8-a990-29b98a868bdb" class="">Many-to-One Model</h3><ul id="9f1aa9c3-dd38-43bc-95e9-1d7d9fbe63d8" class="bulleted-list"><li style="list-style-type:disc">Maps many user-level threads to one kernel thread. thread management is done by the thread library in user space.</li></ul><ul id="0667460d-5776-4722-99ae-667f886adfa0" class="bulleted-list"><li style="list-style-type:disc">The entire process will block if a thread makes a blocking system call.</li></ul><ul id="0c74381c-128a-4628-84a4-4b6eeeaf62da" class="bulleted-list"><li style="list-style-type:disc">Because only one thread can access the kernel at a time, multiple threads are unable to run in parallel on multicore threads.</li></ul><h3 id="1e276af7-4ac6-43c3-872a-4fb91a1d766c" class="">One-to-One Model</h3><ul id="78b6b038-b750-48b4-a8ed-51e7eaaf97bf" class="bulleted-list"><li style="list-style-type:disc">This model maps each user thread to a kernel thread.</li></ul><ul id="089b67d7-bd36-4acf-8105-afb7fd007e7a" class="bulleted-list"><li style="list-style-type:disc">It provides more concurrency than the man-to-one model by allowing another thread to run when a thread makes a blocking system call.</li></ul><ul id="a2000ead-5e66-4997-82ae-00e5874741db" class="bulleted-list"><li style="list-style-type:disc">It also allows multiple threads to run in parallel on multiprocessors.</li></ul><ul id="896cf4b3-527a-47e1-9d21-1351f3dde9ec" class="bulleted-list"><li style="list-style-type:disc">Drawback: creating a user thread requires creating the corresponding kernel thread. Because the overhead of creating kernel threads can burden the performance of an application, most implementations of this model restrict the number of threads supported by the system.</li></ul><h3 id="000ffc5a-2116-41a0-bc29-96ce380bab0a" class="">Many-to-Many Model</h3><ul id="cf74585f-c7ee-4e99-8f6d-dde4ee179c62" class="bulleted-list"><li style="list-style-type:disc">This model multiplexes many user-level threads to a smaller or equal number of kernel threads. </li></ul><ul id="177da39c-aec3-4049-97ca-86f93b18969a" class="bulleted-list"><li style="list-style-type:disc">This model overcomes the shortcomings of the above two models. Developers can create as many user threads as necessary, and the corresponding kernel threads can run in parallel on a multiprocessor. Also, when a thread performs a blocking system call, the kernel can schedule another thread for execution.</li></ul><h2 id="63eba10a-2b85-438f-b90d-f7f89b2dfd23" class=""><mark class="highlight-teal">Thread Libraries</mark></h2><p id="54151487-e0fd-4f1b-b352-7733f8844761" class="">A thread library provides the programmer with an API for creating and managing threads. There are two primary ways of implementing a thread library. </p><ul id="9194c4da-6830-47a4-8e68-abd941c0d459" class="bulleted-list"><li style="list-style-type:disc">The first approach is to provide a library entirely in user space with no kernel support. All code &amp; data structures for the library exist in user space. </li></ul><ul id="c540cd79-58cf-4b6e-89c1-1400c5420558" class="bulleted-list"><li style="list-style-type:disc">The second approach is to implement a kernel-level library supported directly by the OS. Here, code &amp; data structures for the library exist in kernel space. Invoking a function in the API for the library typically results in a system call to the kernel.</li></ul><h2 id="0227f79f-756d-4e1f-bd37-27001dc52c92" class=""><mark class="highlight-teal">Implicit Threading</mark></h2><p id="a6113071-a9fe-408a-aac7-f594cf692030" class="">One way to address the difficulty of creating multithreading applications &amp; to better support their design is to transfer the creastion and management of threading from application developers to cimpilers and run-time librarires. This is called <em>implicit threading</em>.</p><h3 id="a1d55e33-a5d2-4de9-9705-05c23cf6c3ee" class="">Thread Pools</h3><ul id="bfc7d98c-8309-45df-88f7-15a62a7118cb" class="bulleted-list"><li style="list-style-type:disc">Create a number of threads at process startup and place them into a pool, where they sit and wait for work.</li></ul><ul id="5e153317-c12f-467f-adc2-c5c2a7a06ab3" class="bulleted-list"><li style="list-style-type:disc">When a server receives a request, it awakens a thread from this pool—if one is available—and passes it the request for service.</li></ul><ul id="2803340c-625c-4850-95ed-62284e49bde3" class="bulleted-list"><li style="list-style-type:disc">Once the thread completes its service, it returns to the pool and awaits more work.</li></ul><ul id="fa88c7a7-fc6f-4c6a-b6e7-0cd41508f2fb" class="bulleted-list"><li style="list-style-type:disc">If the pool contains no avaliable thread, the server waits until one becomes free.</li></ul><ul id="d3999785-0648-4dde-ba1a-248824079183" class="bulleted-list"><li style="list-style-type:disc"><em>Benefits</em>:<ul id="4b63db43-0ce0-440e-a08f-f242141383c4" class="bulleted-list"><li style="list-style-type:circle">Servicing a request with an existing thread is faster than waiting to create a thread.</li></ul><ul id="a71f0229-d3ed-4543-a77d-3c24259e91d4" class="bulleted-list"><li style="list-style-type:circle">A thread pool limits the number of threads that exist at any one point. </li></ul><ul id="8a2e1596-c9d1-4a84-aaf4-53b28d8fc8c9" class="bulleted-list"><li style="list-style-type:circle">Separating the task to be performed from the mechanics of creating the task allows us to use different strategies for running the task.</li></ul></li></ul><h3 id="af40b191-cdaa-4f12-9cd6-2eb0ebb82dd7" class="">OpenMP</h3><ul id="98f7ed3f-6d38-4878-a4f5-3619491ef241" class="bulleted-list"><li style="list-style-type:disc">OpenMP is a set of compiler directives as well as an API for programs written in C, C++, or FORTRAN (<code>omp.h</code>library) that support for parallel programming in shared-memory environments.</li></ul><ul id="4000a4d5-46ab-4467-80e6-5c707df5594d" class="bulleted-list"><li style="list-style-type:disc">It identifies <mark class="highlight-orange">parallel regions</mark>as blocks of code that may run in parallel.</li></ul><ul id="f61b2b24-13f0-47d1-b07c-7cfc9a05b3b2" class="bulleted-list"><li style="list-style-type:disc">Use <code>#pragma omp parallel</code>above the section of code which you want to run in parallel.</li></ul><h3 id="b508e67a-e667-4313-93c0-322729bcddae" class="">Grand Central Dispatch</h3><ul id="ac0cb2b4-e89e-46ab-9700-2411ae05bdd6" class="bulleted-list"><li style="list-style-type:disc">GCD is a technology for Apple&#x27;s Max OS X and iOS. It is a combination of the extensions to the C language, an API, and a run-time library that allows application developers to identify sections of code to run in parallel.</li></ul><ul id="7c240d6a-9e68-43bb-8581-522c7abf5d8a" class="bulleted-list"><li style="list-style-type:disc"><code>^{ printf(&quot;I am a block&quot;); }</code></li></ul><h1 id="d45acd47-ec0f-477d-9e3b-1fca480e4efc" class=""><mark class="highlight-red">Process Scheduling</mark></h1><h2 id="8ba24c4a-1314-4aa7-a923-c678ab532fe6" class=""><mark class="highlight-teal">Basic Concepts</mark></h2><p id="8129e8ef-92b3-4786-b717-9e4d0c2a0458" class="">In a single-processor system, only one process can run at a time. Others must wait until the CPU is free and can be rescheduled.</p><p id="5e3fbf9d-c3fa-4595-918a-ef94c12b0752" class="">The idea of multiprogramming is to have some process running at all times, to maximize CPU utilization. A process is executed until it must wait, typically for the completion of some I/O request. In a simple computer system, the CPU then just sits idle. All this waiting time is wasted. With multiprogramming, we try to use this time productively. Several processes are kept in memory at one time &amp; when one process has to wait, OS takes CPU away from that process &amp; assigns it to another process in memory.</p><h3 id="106088bc-bdc4-4618-90be-ef6c972b2eb0" class="">CPU Scheduler</h3><ul id="3d5e640d-35b7-4d1f-9a89-e1160ff72db9" class="bulleted-list"><li style="list-style-type:disc">Whenever the CPU becomes idle, the OS must select one of the processes in the ready queue to be executed. The  selection process is carried out by the <mark class="highlight-orange">short-tem scheduler, </mark>or CPU scheduler.</li></ul><ul id="f0db4374-6a47-4a32-a0df-87315ad64c75" class="bulleted-list"><li style="list-style-type:disc">The scheduler selects a process from the processes in memory that are ready to execute &amp; allocate the CPU to that process.</li></ul><h2 id="efedda08-f893-43e2-911e-d1fb1951e10a" class=""><mark class="highlight-teal">Scheduling Criteria</mark></h2><p id="628820af-4fc9-48b5-af57-216c86d2477f" class="">Different CPU-scheduling algorithms have different properties, and the choice of a particular algorithm may favor one class of processes over another.</p><ul id="ea1413cf-daa0-42b1-95eb-07105d1dc812" class="bulleted-list"><li style="list-style-type:disc"><strong>CPU utlization</strong>: we want to keep the CPU as busy as possible(in real time systems, it&#x27;s generally around 40-90%).</li></ul><ul id="caf24da0-a69c-4bea-859d-3a88da34a3cb" class="bulleted-list"><li style="list-style-type:disc"><strong>Throughput: </strong>It describes how much busy the CPU is in executing processes. The number of processes that are compelted per time unit is called throughput.</li></ul><ul id="35601847-0234-46c4-8478-4c95bcfc49e2" class="bulleted-list"><li style="list-style-type:disc"><strong>Turnaround time</strong>: It is the sum of the periods spent waiting to get into memory, waiting in the ready queue, executing on the CPU, and doing I/O.</li></ul><ul id="90649248-44b5-4165-b2d3-5e0cd136aacb" class="bulleted-list"><li style="list-style-type:disc"><strong>Waiting time</strong>: It is the sum of periods spent waiting in the ready queue.</li></ul><ul id="42976093-72e0-4a03-8fc3-874ac8eb1db7" class="bulleted-list"><li style="list-style-type:disc"><strong>Response time</strong>: It is the time, a process takes to start responding.</li></ul><h2 id="a84ae4ea-44b9-4fd4-9717-b731fcdb3682" class=""><mark class="highlight-teal">Scheduling Alogrithms</mark></h2><h3 id="10f02c9b-35e1-4271-9397-dac9311b12a0" class="">First-Come, First-Served Scheduling</h3><ul id="02592098-0cf4-468e-9bc5-18a883760be7" class="bulleted-list"><li style="list-style-type:disc">The processs that requests the CPU first is allocated the CPU first.</li></ul><ul id="11befd36-4c6f-4ba0-bb20-f060b5723e25" class="bulleted-list"><li style="list-style-type:disc">Implementation is managed by a FIFO queue. When a process enters a ready queue, its PCB is linked onto the tail of the queue.</li></ul><ul id="cdd58c4f-fa5d-47d6-b9e3-0c446df18633" class="bulleted-list"><li style="list-style-type:disc">When the CPU is free, it is allocated to the process at the head of the queue.</li></ul><ul id="ff43dabf-91b3-4cea-8f54-84e6417be4bb" class="bulleted-list"><li style="list-style-type:disc">Average waiting time is often quite long.</li></ul><ul id="2e861d3c-c037-4abb-84bd-9bbf2a20dafe" class="bulleted-list"><li style="list-style-type:disc">If a CPU-bound process(p) arives in the list and all other processes are I/O bound(q, r, s, t,v, etc.). Now <code>p</code> will block the CPU for long, the rest of the processes would have to wait for long. Now, suppose process <code>p</code> requests for I/O, since all the other process have short CPU bursts, they will execute quickly and then wait for the I/O. Now, if the process <code>p</code> executes again, then the rest of the processes will have to wait for long. This is called <em><mark class="highlight-orange">convoy effect</mark></em>, as all the other processes wait for the one big process to get off the CPU. This effect results in less CPU &amp; device utilization.</li></ul><ul id="30c613ff-3ab1-4ff4-9793-7c8044d83ef6" class="bulleted-list"><li style="list-style-type:disc">It is non-preemptive(once allocated to a process, that process will keep the CPU until it realeases the CPU, either by terminating or by requesting I/O).</li></ul><ul id="f36819a8-1172-4a2a-9afc-999f0d1c5745" class="bulleted-list"><li style="list-style-type:disc">Not ideal for time-sharing systems.</li></ul><h3 id="a884815c-b843-48c1-be23-3f755d45b9db" class="">Shortest-Job-First Scheduling</h3><ul id="2164962e-4812-49bd-877c-2b506cfdb1f4" class="bulleted-list"><li style="list-style-type:disc">This algorithm associates with each process the length of the process&#x27;s next CPU burst. When the CPU is available , it is assigned, its assigned to the process That has the smallest next CPU burst.</li></ul><ul id="99eab301-bc47-415a-a5b1-79e559505c24" class="bulleted-list"><li style="list-style-type:disc">the real difficulty with the SJF algorithm is knowing the length of the next CPU request.</li></ul><ul id="9ca711d6-95c6-46f6-8943-1123d0fcbaef" class="bulleted-list"><li style="list-style-type:disc">It is used frequently in long-term scheduling.</li></ul><ul id="00063d81-909f-4520-9870-a7e0113e0f8b" class="bulleted-list"><li style="list-style-type:disc">Although the SJF algorithm is optimal, it cannot be implemented at the level of short-term CPU scheduling, cause there is no way to know the length of the next CPU burst.</li></ul><ul id="c9bc84f7-5b84-4cc7-bc6b-1f5c0076ebda" class="bulleted-list"><li style="list-style-type:disc">It can be preemtive or non-preemptive.</li></ul><ul id="68158bab-172b-4240-985e-f66c3a5131cc" class="bulleted-list"><li style="list-style-type:disc">Preemptive SJF scheduling is sometimes called <em><mark class="highlight-orange">shortest-remaining-time-first</mark></em> scheduling.</li></ul><h3 id="6f7ffd47-b13b-4003-82b7-488c89ac4e52" class="">Priority Scheduling</h3><ul id="ec68ba65-9ba1-4234-b4a4-3ed0f20b0f01" class="bulleted-list"><li style="list-style-type:disc">A priority is associated with each process, and the CPU is allocated to the process with the highest priority. Equal-priority processes are scheduled in FCFS order.</li></ul><ul id="c39ac512-682a-4a4d-aa35-d631790e97dc" class="bulleted-list"><li style="list-style-type:disc">An SJF algorithm is simply a priority algorithm where the priority(p) is the inverse of the(predicted) next CPU burst.</li></ul><ul id="8d9c489a-e951-4132-96bc-a0b8cdffdd99" class="bulleted-list"><li style="list-style-type:disc">The largest the CPU burst, the lower the priority, and vice versa.</li></ul><ul id="23a87907-b23a-4aa6-b93d-3e2db99476a6" class="bulleted-list"><li style="list-style-type:disc">Priorities can be defined either internally or externally.</li></ul><ul id="3cca9a38-0672-4635-b209-c6c16d7a49ed" class="bulleted-list"><li style="list-style-type:disc">A major problem with priority scheduling algorithms is <mark class="highlight-orange">indefinite blocking</mark> or <mark class="highlight-orange">starvation</mark>. A process that is ready to run but waiting for the CPU can be considered blocking. A priority scheduling algorithm can leave some low priority processes waiting indefinitely.<ul id="1fefeb6c-644b-4035-ad89-a6a2d3cfa5d3" class="bulleted-list"><li style="list-style-type:circle">In a heavily loaded computer system, a steady stream of higher-priority processes can prevent a low-priority process from ever getting the CPU.</li></ul><ul id="db34bc7c-4865-4f28-81a3-dfa5e6e1c077" class="bulleted-list"><li style="list-style-type:circle">A solution to starvation of low-priority processes is <mark class="highlight-orange">aging</mark>. Aging invloves gradually increasing the priority of processes that wait in the system for a long time.</li></ul></li></ul><h3 id="5019d848-b605-4ee5-b75d-93b326dda1b1" class="">Round-Robin Scheduling</h3><ul id="ce938dd4-c272-431b-bcd2-8b0c2a05d9de" class="bulleted-list"><li style="list-style-type:disc">It is designed especially for time-sharing systems. It is similar to FCFS scheduling, but preemption is added to enable the system to switch between processes.</li></ul><ul id="c665e9b7-966c-495d-b4e6-e7b2bdfb35cf" class="bulleted-list"><li style="list-style-type:disc">A small unit of time, called a <mark class="highlight-orange">time quantum</mark> or <mark class="highlight-orange">time slice</mark>, is defined. It is generally from 10 to 100ms in length. </li></ul><ul id="152b5718-578b-4a14-a626-d143af1767b0" class="bulleted-list"><li style="list-style-type:disc">The ready queue is treadted as a circular queue. The CPU scheduler goes around the ready queue, allocating the CPU to each process for a time interval of up to 1 time quantum.</li></ul><ul id="c5ffd944-3031-47d5-aafc-1b0fccb34719" class="bulleted-list"><li style="list-style-type:disc">The process may have a CPU burst of less tahn 1 time quantum. In this case, the process itself will release the CPU voluntarily. The scheduler will then proceed to the next process in the ready queue. If the CPU burst of tghe currently running process is longer than 1 time quantum, the timer will go off and will cause an interrup to the OS. A context switch will be executed, and the process will be put at the tail of the ready queue. The CPU scheduler will then select the next process in the ready queue.</li></ul><h3 id="b00ee7c2-b64b-4f74-90bd-63fbf0b008f2" class="">Multilevel Queue Scheduling</h3><ul id="7f250a58-5cfa-4c58-913a-351237de2d5b" class="bulleted-list"><li style="list-style-type:disc">A multilevel queue scheduling algorithm partitions the ready queeu into several separate queues. The processes are permanently assigned to one queue, generally based on some property of the process, such as <em>memory size</em>, <em>process priority</em>, or <em>process type</em>.</li></ul><ul id="ea31c9aa-5223-4b46-9317-fa7210422c6b" class="bulleted-list"><li style="list-style-type:disc">For example, common division is made between <mark class="highlight-orange">foreground</mark>(interactive) processes and <mark class="highlight-orange">background</mark>(batch) processes. These two types of processes have different response-time requirements and so may have different scheduling needs. In addition, foregoround processes may have priority(externally defined) over backgroun process. Here, forground processes can be given 80% of CPU time &amp; 20% of CPU time to background processes.</li></ul><h3 id="71032f10-7b0f-44a7-8f04-8c63590211c2" class="">Multilevel Feedback Queue Scheduling</h3><ul id="8b1ed89e-f0ec-4743-ac4a-549ed74253b2" class="bulleted-list"><li style="list-style-type:disc">The multilevel feedback queue scheduling algorithm, in contrast, allows a process to move between queues. The idea is to separate procedsses according to the characteristics of their CPU bursts. </li></ul><ul id="70c58bba-4699-4208-b884-c4518b89a95c" class="bulleted-list"><li style="list-style-type:disc">If a process uses too much CPU time, it will be moved to a lower-priority queue. This scheme leaves I/O-bound and interactive processes in the higher-priority queues.</li></ul><ul id="fdc0227a-0bdf-4786-b5c8-3b2dcd39914c" class="bulleted-list"><li style="list-style-type:disc">Likely, a process that waits too long in a lower-priority queue may be moved to a higher-priority queue. This form of aging prevents starvation.</li></ul><h1 id="41d69305-3e5b-4ea8-a9ea-b87b1d601d28" class="block-color-red">Synchronization</h1><p id="cb0a8460-6743-40d2-a684-d12ef2d5c21b" class="">A <mark class="highlight-orange">coopearting process</mark> is one that can affect or be affected by other processes executing in the system. Cooperating processes can either directly share a logical address space(both code &amp; data) or be allowed to share data only through files or messages. Concurrent access to shared data may result in data inconsistency.</p><p id="587313ad-abea-43a3-bb29-06043f74815e" class="">A situation where processes access &amp; manipulate the same data concurrently and the outcome of the execution depends on the particular order in which the access takes place, is called a <mark class="highlight-orange">race condition</mark>.</p><h2 id="0581159f-463b-44b9-b932-95a4edf99e5c" class=""><mark class="highlight-teal">The Critical-Section Problem</mark></h2><p id="c473e767-f4ab-4f2f-81db-7c2c1c703f67" class="">Consider a system consisting of n processes <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>P</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">{P_0, P_1,...,P_{n-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>. Each process has a segment of code, called a <em><mark class="highlight-orange">critical section</mark></em><em>, </em>in which the process may be changing common variables, updating a table, writing a file, and so on. The important feature of the system is that, when one process is executing in its critical section, no other process is allowed to execute in its critical section.</p><p id="d52dbb98-275c-4cf4-a20b-dfc4d4e6e8bb" class="">Each process must request permission to enter its critical section. The section of code implementing this request is the <mark class="highlight-orange">entry section</mark>. The critical section may be followed by an <mark class="highlight-orange">exit section</mark>. The reamining code is the <mark class="highlight-orange">remainder section</mark>.</p><p id="9d045e90-4fff-4c59-970b-01acc514aea8" class="">A solution to the critical-section problem must satisfy the following requirements:</p><ol type="1" id="f1547b18-238e-45b7-aba6-893e1f423dd7" class="numbered-list" start="1"><li><strong>Mutual Exclusion</strong>. If process <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> is executing in its critical section, then no other processes can be executing in their critical sections.</li></ol><ol type="1" id="1c5f57f3-3f75-4f3f-bacf-dc1bd7d39526" class="numbered-list" start="2"><li><strong>Progress</strong>. If no process is executing in its critical section &amp; some processes wish to enter their critical sections, then only those processes that are not executing in their remainder sections can participate in deciding which will enter its critical section next, and this selection cannot be postponed indefinitely.</li></ol><ol type="1" id="27356cfd-baa0-4249-ac2a-8f4e18770a4a" class="numbered-list" start="3"><li><strong>Bounded Waiting</strong>. There exists a bound, or limit, on the number of times that other processes are allowed to enter their critical sections after a process has made a request to enter its critical section &amp; before that request is granted.</li></ol><h3 id="12390d2b-d589-48a2-bcfb-019a447ea387" class=""><mark class="highlight-teal">Peterson&#x27;s Solution</mark></h3><ul id="cc91792d-a723-4969-b4b1-ada9d7161e7f" class="bulleted-list"><li style="list-style-type:disc">There&#x27;s no guarantee that this solution will work correctly on modern architectures.</li></ul><ul id="fe0e6b16-6561-41f8-9c4a-df9186bd6b5f" class="bulleted-list"><li style="list-style-type:disc">It is restricted to two processes that alternate execution between their critical sections &amp; remainder sections.</li></ul><ul id="de3818cc-cf99-4348-a5f8-a4f048c338de" class="bulleted-list"><li style="list-style-type:disc">The processes are <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> &amp; <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">P_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>. This solution requires the two processes to share two data items:<p id="c269f306-56f2-46c3-8069-0b9e500d9f60" class=""><code>int turn;</code></p><p id="4feeb305-138f-4f87-b992-bfdc9a9229eb" class=""><code>boolean flag[2];</code></p></li></ul><ul id="f34bf01a-c2cd-4839-aa01-6904d2c6ef8f" class="bulleted-list"><li style="list-style-type:disc">To enter the critical section, process <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> first sets <code>flag[i]</code> to be true and then sets <code>turn</code> to the value of <code>j</code>, thereby asserting that if the other process wishes to enter the critical section, it can do so. If both try to enter at the same time then only of the these assignments will last; the other will be overwritten immediately. The eventual value of <code>turn</code> determines which of the two processes is allowed to enter its critical section first.</li></ul><script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9J3l1+EYfeaPKcGXu3MS/7T+w19WtKQY/n+xzmw4hZhJ9tyYmcUS+4QqAlzhicE5LAfMQSF3iFTK9bQdTxXg==" crossorigin="anonymous" referrerPolicy="no-referrer"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" integrity="sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==" crossorigin="anonymous" referrerPolicy="no-referrer"/><pre id="d75ddd5b-da75-456e-a278-5c68aa07d855" class="code"><code class="language-C">do {
	flag[i] = true;
	turn = j;
	while (flag[j] &amp;&amp; turn == j);
	// critical section
	flag[i] = false;
	// remainder section
} while(true);</code></pre><h2 id="f0817da6-78f4-42f5-9c57-2e7dde557fc4" class=""><mark class="highlight-teal">Mutex Locks</mark></h2><ul id="f48add94-d6d2-4a33-8ac5-30cc31f5e312" class="bulleted-list"><li style="list-style-type:disc">Hardware solutions to solve the ciritcal-section problem is complicated &amp; generally inaccessible to application programmers. So, OS designers build software tools to solve the critical-section problem.</li></ul><ul id="8a4d5b06-dbf4-4a9c-a4c8-f8b714e8151c" class="bulleted-list"><li style="list-style-type:disc">One of the simplest of such tools is <mark class="highlight-orange">mutex locks</mark>(mutext is short for mutual exclusion).</li></ul><ul id="f8a5cc60-3814-4465-bf6d-bec6f17a338b" class="bulleted-list"><li style="list-style-type:disc">A process must acquire the lock before entering a critical section; it releases the lock when it exits the critical section. The <code>acquire()</code>function acquires the lock, and the <code>release()</code>function releases the lock.<br/><br/></li></ul><script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9J3l1+EYfeaPKcGXu3MS/7T+w19WtKQY/n+xzmw4hZhJ9tyYmcUS+4QqAlzhicE5LAfMQSF3iFTK9bQdTxXg==" crossorigin="anonymous" referrerPolicy="no-referrer"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" integrity="sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==" crossorigin="anonymous" referrerPolicy="no-referrer"/><pre id="7e8a1562-b7c0-452c-b715-f443bc5e5244" class="code"><code class="language-C">acquire() {
	while(!available)
	; // busy wait
	available = false;
}

release() {
	available = true;
}

// solution using mutex locks.
do {
	// acquire lock
		// critical section
	// release lock
		// remainder section
} while(true);</code></pre><ul id="e4ba1ff3-6927-4f5e-8f24-0825a0183e45" class="bulleted-list"><li style="list-style-type:disc">The main disadvantage of the implementation given here is that it requires <mark class="highlight-orange">busy waiting</mark>. While a process is in its critical section, any other process that tries to enter its critical section must loop continuously in the call to <code>acquire()</code>. </li></ul><ul id="083a6e49-5e1a-4129-9701-f32ab4c17dc5" class="bulleted-list"><li style="list-style-type:disc">This type of mutex lock is also called <mark class="highlight-orange">spinlock</mark> because the process &quot;spins&quot; while waiting for the lockto become available.</li></ul><ul id="a1625dbd-de09-44dd-88ec-f4effcf073cb" class="bulleted-list"><li style="list-style-type:disc">Busy waiting wastes CPU cycles that some other process might be able to use productively.</li></ul><ul id="e92dcdfa-8b40-43d4-82fc-2911ed74c0f7" class="bulleted-list"><li style="list-style-type:disc">Main advantage of Spinlocks is that no context switch is reqwuired when a process must wait on a lock, &amp; a context switch may take considerable time.</li></ul><ul id="975249a0-f396-4228-bd54-737310a18cd3" class="bulleted-list"><li style="list-style-type:disc">Thus, when locks are expected to be held for short times, spinlocks are useful. They are often employed on multprocessor systems where one thread can &quot;spin&quot; on one processor while another thread performs in critical section on another processor.</li></ul><h2 id="8e95839d-b012-499e-ae4d-f3776914d651" class=""><mark class="highlight-teal">Semaphores</mark></h2><ul id="f4e314f2-e4d4-47d2-a596-88f7648e8c9a" class="bulleted-list"><li style="list-style-type:disc">A <mark class="highlight-orange">semaphore </mark><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span><span>﻿</span></span> is an integer variable that, apart from initialization, is accessed only through two standard atomic operation: <code>wait()</code>and <code>signal()</code>.</li></ul><script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9J3l1+EYfeaPKcGXu3MS/7T+w19WtKQY/n+xzmw4hZhJ9tyYmcUS+4QqAlzhicE5LAfMQSF3iFTK9bQdTxXg==" crossorigin="anonymous" referrerPolicy="no-referrer"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" integrity="sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==" crossorigin="anonymous" referrerPolicy="no-referrer"/><pre id="ca275512-87f9-4c7f-b567-4ddee31bc915" class="code"><code class="language-C">wait(S) {
	while (S &lt;= 0)
	; // busy wait
	S--;
}

signal(S) {
	S++;
}</code></pre><h3 id="775a6884-839f-4107-b2f6-7953b1a293f5" class="">Semaphore Usage</h3><ul id="0174137c-fa8b-48f0-a671-1b25c10c05b1" class="bulleted-list"><li style="list-style-type:disc">The value of <mark class="highlight-orange">counting semaphore</mark> can range over an unrestricted domain. The value of a <mark class="highlight-orange">binary semaphore</mark> can range only between 0 &amp; 1.</li></ul><ul id="3a7029c1-fe5a-496d-9981-d51e5a4f7da0" class="bulleted-list"><li style="list-style-type:disc">Counting semaphores can be used to control access to a given resource consisting of a finite number of instances. <ul id="d1e87446-3877-4e23-8f86-94254a469d2a" class="bulleted-list"><li style="list-style-type:circle">The semaphore is initialized to the number of resources available.</li></ul><ul id="88eca5af-950a-4eff-bd82-cf774fec9d48" class="bulleted-list"><li style="list-style-type:circle">Each process that wishes to use a resource performs a <code>wait()</code>operation on the semaphore(thereby decrementing the count).</li></ul><ul id="076b5db6-0ae9-4beb-b2b9-72ac73331a81" class="bulleted-list"><li style="list-style-type:circle">When a process releases a resource, it performs a <code>signal()</code>operation(incrementing the count).</li></ul><ul id="fa3cc2d6-6dd3-4b58-8c49-8e77dd1c528e" class="bulleted-list"><li style="list-style-type:circle">When the count for the semaphore goes to 0, all resources are being used. After that, processes that wish to use a resource will block until the count becomes greater than 0.</li></ul></li></ul><h3 id="6452b786-4a44-445a-a484-36ff8baa6472" class="">Semaphore Implementation</h3><ul id="ea4db8ba-6a82-4f1c-8a6f-c6ad4a106609" class="bulleted-list"><li style="list-style-type:disc">In the above implementation, <mark class="highlight-orange">busy waiting</mark> still persists. To overcome this, we can modify the definition of <code>wait()</code>and <code>signal()</code>. </li></ul><ul id="a2fc2f88-7bc3-4e48-a1ed-904f1f45d2a3" class="bulleted-list"><li style="list-style-type:disc">When a process executes the <code>wait()</code>operation and finds that the semaphore value is not positive, it must wait. Rather than busy waiting, the process could block itself. The block operation places a process into a waiting queue associated with the semaphore, &amp; the state of the process is switched to the waiting state. Then control is transferred to the CPU scheduler, which selects another process to execute.</li></ul><ul id="0f8909d4-77f0-4b09-9519-edbff2b626df" class="bulleted-list"><li style="list-style-type:disc"> A process that is blocked, waiting on a semaphore <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span><span>﻿</span></span>, should be restarted when some other process executes a <code>signal()</code> opeation. The process is restarted by a <code>wakeup()</code>operation, which cahnges the process from teh waiting state to the ready state.</li></ul><script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9J3l1+EYfeaPKcGXu3MS/7T+w19WtKQY/n+xzmw4hZhJ9tyYmcUS+4QqAlzhicE5LAfMQSF3iFTK9bQdTxXg==" crossorigin="anonymous" referrerPolicy="no-referrer"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" integrity="sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==" crossorigin="anonymous" referrerPolicy="no-referrer"/><pre id="a3c3fa19-dc13-4edb-9ad6-eecb334b5b38" class="code"><code class="language-C">typedef struct {
	int value;
	struct process *list;
} semphore;

wait(semaphore *S) {
	S-&gt;value--;
	if (S-&gt;value &lt; 0) {
		// add this process to S-&gt;list
		block();
	}
}

signal(semaphore *S) {
	S-&gt;value++;
	if (S-&gt;value &lt;= 0) {
		// remove a process P from S-&gt;list;
		wakeup(P);
	}
}</code></pre><h3 id="6b16a2c0-806d-448b-b9e4-194b36bb6166" class="">Deadlocks &amp; Starvation</h3><ul id="fede77a9-162c-4130-a2aa-85a6e37f1003" class="bulleted-list"><li style="list-style-type:disc">The implementation of a semaphore with a waiting queue may result in situation where two or more processes are waiting indefinitely for an event that can be caused only by one of the waiting processes. When such a state is reached, these processes are said to be <mark class="highlight-orange">deadlocked</mark>.</li></ul><ul id="16dd278c-03ab-4270-b278-883dc3b668b8" class="bulleted-list"><li style="list-style-type:disc"><mark class="highlight-orange">Indefinite blocking</mark> or <mark class="highlight-orange">Starvation</mark>, a situation in which processes wait indefinitely within the semaphore. Indefinite blocking may occure if we remove processes from the list associated with a semaphore in LIFO order.</li></ul><h2 id="1b45cddf-ed02-45ee-8503-5d6d6bd7c872" class=""><mark class="highlight-teal">Classic Problems of Synchronization</mark></h2><h3 id="2a4f7d4d-6dd2-41de-ac58-624d7439b31f" class="">The Bounder-Buffer Problem</h3><p id="eddad544-25c7-4ded-a4ec-fa69b95d8781" class="">The bounded-buffer problems (aka the producer-consumer problem) is a classic example of concurrent access to a shared resource. A bounded buffer lets multiple producers and multiple consumers share a single buffer. Producers write data to the buffer and consumers read data from the buffer.</p><h3 id="3caadd39-f5ca-49fe-b7ee-39d88102e65d" class="">The Readers-Writers Problem</h3><ul id="5fb14843-66f9-406c-8fef-a0e5ee02b537" class="bulleted-list"><li style="list-style-type:disc">If tow readers access the shared data simultaneously, no adverse effects will result. However, if a writer and some other process(either a reader or a writer) access the data simultaneously, chaos may ensue.</li></ul><ul id="1a832da0-c402-4baf-8c23-43c05b8afa98" class="bulleted-list"><li style="list-style-type:disc">To ensure thatt these difficulties do not arise, we require that the writers have exclusive access to the shared database while writing to the database. This synchronization problem is referred to as the <mark class="highlight-orange">readers-writers problem</mark>.</li></ul><h3 id="f847563c-5932-4c80-9fd2-a9832b31b9ac" class="">The Dining-Philosophers Problem</h3><ul id="4884260e-226d-4d18-8b32-8318bff8fe13" class="bulleted-list"><li style="list-style-type:disc">The dining philosophers problem states that there are 5 philosophers sharing a circular table and they eat and think alternatively. There is a bowl of rice for each of the philosophers and 5 chopsticks. A philosopher needs both their right and left chopstick to eat. A hungry philosopher may only eat if there are both chopsticks available.Otherwise a philosopher puts down their chopstick and begin thinking again.</li></ul><ul id="349f41d6-dd41-416d-b930-0096b44218a3" class="bulleted-list"><li style="list-style-type:disc">The dining philosopher is a classic synchronization problem as it demonstrates a large class of concurrency control problems.</li></ul><h1 id="1229e658-ded2-48eb-9f4e-b3c073757a43" class=""><mark class="highlight-red">Deadlocks</mark></h1><p id="cdc30ee9-a861-47e4-b884-39cf0ee9a452" class="">Sometimes, a waiting process is never again able to change state, because the resources it has requested are held by other waiting processes. This situation is called <mark class="highlight-orange">deadlock</mark>.</p><h2 id="f6cfc946-86c3-4a52-9260-a6e63b455175" class=""><mark class="highlight-teal">Deadlock Characterization</mark></h2><h3 id="a3d7a8be-6566-43d7-9b4d-81681353f01f" class="">Necessary Conditions</h3><p id="1e6f3fc1-cb98-4b9e-948b-f56daf597781" class="">A deadlock situation can arise if the following four conditions hold simultaneously in a system.</p><ol type="1" id="b059f72e-5199-47fc-8c5c-5a922084c760" class="numbered-list" start="1"><li><strong>Mutual exclusion</strong>. At least one resource must be held in a nonsharable mode; that is, only one process at a time can use the resource. If another process requests that resource, the requesting process must be delayed until the resource has been released.</li></ol><ol type="1" id="4147b41c-de1a-4a5a-897a-07ce94c3e1e1" class="numbered-list" start="2"><li><strong>Hold and wait</strong>. A process must be holding at least one resource and waiting to acquire additional resources that are currently being held by other processes.</li></ol><ol type="1" id="509ef5a1-c824-48e6-8efd-4babc496f0de" class="numbered-list" start="3"><li><strong>No preemption</strong>. Resources cannot be preempted; that is, a resource can be released only voluntarily by the process holding it, after that process has complete its task.</li></ol><ol type="1" id="fa6e611b-65ce-4530-86b1-7865dfcb5fcf" class="numbered-list" start="4"><li><strong>Circular wait. </strong>A set <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>P</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{P_0, P_1, ..., P_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> of waiting processes must exist such that <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">P_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> is waiting for a resource held by <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1, P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> is waiting for a resource held by <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>P</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">P_2, ..., P_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> is waiting for a resource held by <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">P_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>, and <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">P_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> is waiting for a resource held by <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">P_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>.</li></ol><h3 id="a6001e5d-d3a8-4141-8327-60eedae3f8d3" class="">Resource-Allocation Graph</h3><ul id="ac2fc566-cf67-4f19-9e56-1a54632cdf42" class="bulleted-list"><li style="list-style-type:disc">Deadlocks can be described more precisely in terms of a directed graph called a <mark class="highlight-orange">system resource-allocation graph</mark>.</li></ul><ul id="53bf4e06-9247-47a0-836d-1cf9f1db5be1" class="bulleted-list"><li style="list-style-type:disc">This graph consists of a set of vertices <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span><span>﻿</span></span> &amp; a set of edges <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span><span>﻿</span></span>. The set of vertices <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span><span>﻿</span></span> is partitioned into two different types of nodes: <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>P</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P = {P_1, P_2, ..., P_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span><span>﻿</span></span>, the set consisting of all the active processes in the system, and <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>R</mi><mi>m</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R={R_1, R_2, ..., R_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span><span>﻿</span></span>, the set consisting of all resource types in the system.</li></ul><ul id="300c00e7-b811-44ab-ba7a-cfe1656b11f3" class="bulleted-list"><li style="list-style-type:disc">A directed edge <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>−</mo><mo>&gt;</mo><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">P_i-&gt;R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> is called a <mark class="highlight-orange">request edge</mark>; a directed edge <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub><mo>−</mo><mo>&gt;</mo><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_j-&gt;P_i </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>is called an <mark class="highlight-orange">assignment edge</mark>.</li></ul><figure id="f1abc7bd-3a8f-4e1b-b6bb-fb9c90a89604" class="image"><a href="/images/blogs/operating_system/IMG_20210912_143608__01__01.jpg"><img style="width:288px" src="/images/blogs/operating_system/IMG_20210912_143608__01__01.jpg"/></a></figure><ul id="81bad1b2-d497-4639-afab-f02b64eaac35" class="bulleted-list"><li style="list-style-type:disc">If the graph contains no cycles, then no process in the system is deadlocked. If the graph does contain a cycle, then a deadlock may exist.</li></ul><ul id="d7c806bf-a5c0-4aef-89e8-ed19cfa19190" class="bulleted-list"><li style="list-style-type:disc">If each resource types has exactly one instance, then a cycle imples that a deadlock has occurred. If the cycle involves only a set of resource types, each of which has only a single instance, then a deadlock has occurred.</li></ul><div id="d7bb6760-fc7e-4a4c-9112-3add8c455ed0" class="column-list"><div id="e6936708-e120-412f-97cc-97bb4108e339" style="width:100%" class="column"><figure id="7d02201a-bff4-446b-a9d2-fe81bac14dad" class="image"><a href="/images/blogs/operating_system/IMG_20210912_143936__01.jpg"><img style="width:336px" src="/images/blogs/operating_system/IMG_20210912_143936__01.jpg"/></a></figure></div><div id="f0e8ec9a-8e03-4214-b7d4-f9c34dd37513" style="width:100%" class="column"><figure id="f5bf8240-78b4-4151-8192-98e6c52bd7eb" class="image"><a href="/images/blogs/operating_system/IMG_20210912_143944__01.jpg"><img style="width:336px" src="/images/blogs/operating_system/IMG_20210912_143944__01.jpg"/></a></figure><p id="2e26e397-5280-43a4-b911-35c92b947c12" class="">
</p></div></div><ul id="bc46ba5b-0cc8-4e6a-a5f1-d90f79bf1c38" class="bulleted-list"><li style="list-style-type:disc">If there is a cycle, then the system may or may not be in a deadlocked state.</li></ul><h2 id="28a14edc-9983-43f5-ae67-70453256de5f" class=""><mark class="highlight-teal">Methods for Handling Deadlocks</mark></h2><ul id="6c2dbaa1-3924-4899-ac57-d2349b4dfbad" class="bulleted-list"><li style="list-style-type:disc">Use a protocol to prevent or avoid deadlocks, ensuring that the system will never enter a deadlocked state.</li></ul><ul id="48a69c5a-24e9-4ae0-b02f-cee379e7883c" class="bulleted-list"><li style="list-style-type:disc">Allow the system to eneter a deadlocked state, detect it, and recover.</li></ul><ul id="6149509a-8f03-4898-85c3-a00025d9ffa4" class="bulleted-list"><li style="list-style-type:disc">Ignore the problem altogether &amp; pretend that deadlocks never occur in the system.</li></ul><h2 id="778a2dec-e7c8-4961-b278-2d90a0b61ff1" class=""><mark class="highlight-teal">Deadlock Prevention</mark></h2><p id="236bf35b-0593-4070-b995-bbc814c8755b" class="">By ensuring that at least one of the necessary conditions cannot hold, we can prevent the occurence of a deadlock.</p><h3 id="d4f6d4c1-7414-4464-b591-9c769fd7bab6" class="">Mutual Exclusion</h3><p id="c3e472fe-89fb-4f6e-9ebe-9db1890684db" class="">We cannot prevent deadlocks by denying the mutual-exclusion condition, because some resources are intrinsically nonsharable.</p><h3 id="c22799c9-3689-4b25-a98d-275b9e118a7d" class="">Hold and Wait</h3><ul id="a2f83142-a589-43dc-a608-f80f6df27ee4" class="bulleted-list"><li style="list-style-type:disc">To avoid this condition, we must guarantee that, whenever a process requests, it does not hold any other resources.</li></ul><ul id="b997158b-a92d-43c1-be83-c6ee112371fa" class="bulleted-list"><li style="list-style-type:disc">One protocol that we can use requires each process to request &amp; be allocated all its resources before it begins execution.</li></ul><ul id="f5133046-1cc7-4dc1-9c0b-5e491be7bdc4" class="bulleted-list"><li style="list-style-type:disc">An alternative protocol allows a process to request resources only when it has none. A process may request some resources and use them. Before it can request any additional resources, it must release all the resources that it is currently allocated.</li></ul><ul id="42c0a780-0433-4977-ada7-3d230b4a35ad" class="bulleted-list"><li style="list-style-type:disc">Disadvantages<ul id="bd0007b9-e727-46f3-bc2a-ad9d8ee1f9c0" class="bulleted-list"><li style="list-style-type:circle">Resource utilization maty be low.</li></ul><ul id="b8903eda-db98-4752-b14e-e574332c1593" class="bulleted-list"><li style="list-style-type:circle">Starvation is possible.</li></ul></li></ul><h3 id="cadcb1eb-707e-40a6-810f-b5ffe6296c6b" class="">No Preemption</h3><ul id="794c327f-0a90-44d9-ae81-06a25730a3cd" class="bulleted-list"><li style="list-style-type:disc">If a process is holding some resources &amp; requests another resource that cannot be immediately allocated to it, then all resources the process is currently holding are preempted. These resources are implicitly released. The preempted resources are added to the list of resources for which the process is waiting. The process will be restarted only when it can regain its old resources, asa well as the new ones that ist is requesting.</li></ul><ul id="26fe68e3-2075-4ba1-95bb-5da9f20905c0" class="bulleted-list"><li style="list-style-type:disc">Alternatively, when a process is waiting, some of its resources may be preempted, but only if another process requests them. A process can be restarted only when it is allocated hte new resources it is requesting &amp; recovers any resources that were preempted while it was waiting.</li></ul><h3 id="4d07a157-b809-4d56-8460-4e005360e7ab" class="">Circular Wait</h3><p id="6744bc89-5385-4b6c-8d57-83db28bb6574" class="">One way to ensure this condition never holds is to impose a total ordering of all resources types &amp; to require that each process requests resources in an increasing order of enumeration.</p><h2 id="d7692eeb-9d44-4d00-a24a-2cda71007437" class=""><mark class="highlight-teal">Deadlock Avoidance</mark></h2><p id="34f29475-f78d-471c-b52e-01b392293497" class="">A deadlock-avoidance algorithm dynamically examines the resource-allocation state to ensure that a cricular-wait condition can never exist. Teh resource-allocation state is defined by the number of avaliable &amp; allocated resources &amp; the maximum demands of the processes.</p><p id="050fb3ce-d019-4762-807a-aeebde5cc5bc" class="">Possible side effects are low device utilization &amp; reduced system throughput.</p><h3 id="dac20ce0-0ed2-4743-9cd9-ad7e17996e99" class="">Safe State</h3><ul id="478ece17-c151-4a79-a80e-78d9a85ecd16" class="bulleted-list"><li style="list-style-type:disc">A state is <em>safe</em> if the system can allocate resources to each process in some order &amp; stil avoid a deadlock. A system is in a safe state only if there exists a <mark class="highlight-orange">safe sequence</mark>. </li></ul><ul id="a323139a-1de7-4693-838e-6132d1a31683" class="bulleted-list"><li style="list-style-type:disc">A sequence of processes <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>P</mi><mi>n</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;P_1, P_2, ..., P_n&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span></span><span>﻿</span></span> is a safe sequence for the current allocation state if, for each <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>, the resource requests that <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> can still make can be satisified by the currently available resources plus the resources hed by all <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">P_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>, with <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>&lt;</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">j&lt;i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span><span>﻿</span></span>.</li></ul><ul id="6e23312c-7cd3-4523-ba8f-9f400d2d5841" class="bulleted-list"><li style="list-style-type:disc">Not all unsafe states are deadlocks, however an unsafe state may lead to a deadlock.</li></ul><ul id="af4fc4c7-b283-4ecd-a8bb-20a2de5e2e1a" class="bulleted-list"><li style="list-style-type:disc">The idea is simply to ensure that the system will always remain in a safe stae. Initially, the system is in a safe state. Whenever a process requests a resource that is currently available, the system must decide whether the resource can be allocated immediately or whether the process must wait. The request is granted only if the allocation leaves the system in a safe state.</li></ul><h3 id="71eb2ccc-81a7-4a9f-bdd1-bc42c613223d" class="">Resource-Allocation-Graph Algorithm</h3><ul id="97b33ecc-db8a-44c5-8749-24118391d38b" class="bulleted-list"><li style="list-style-type:disc">In addition to the request &amp; assignment edges, a new type of edge, called a <mark class="highlight-orange">claim edge</mark> is used. A claim edge <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>−</mo><mo>&gt;</mo><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">P_i-&gt;R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> indicates that process <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> may request resource <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> at some time in the future. It is represented by a dashed line.</li></ul><ul id="f23fa3cb-546c-41d2-890d-026b5b03ee4c" class="bulleted-list"><li style="list-style-type:disc">Now suppos that process <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> requests resource <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span>. the request can be granted only if converting teh request edge <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>−</mo><mo>&gt;</mo><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">P_i-&gt;R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> to an assignment edge <style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/katex.min.css')</style><span data-token-index="0" contenteditable="false" class="notion-text-equation-token" style="user-select:all;-webkit-user-select:all;-moz-user-select:all"><span></span><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub><mo>−</mo><mo>&gt;</mo><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_j-&gt;P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span>﻿</span></span> does not result in the formation of a cycle in the resource-allocation graph. We check for safety by using a cycle-detection algorithm.</li></ul><figure id="ec021b77-cdf8-4c8c-9ad2-6872ce51ed8a" class="image"><a href="/operating_system/IMG_20210912_151802__01.jpg"><img style="width:384px" src="/images/blogs/operating_system/IMG_20210912_151802__01.jpg"/></a></figure><h3 id="965e5dd1-c9fb-460a-8801-8f63bcad6c89" class="">Banker&#x27;s Algorithm</h3><ul id="c140ee4f-a5bd-49e2-9e76-a8d70cdb34db" class="bulleted-list"><li style="list-style-type:disc">The resource-allocation-graph algorithm is not applicable to a resource-allocation system with multiple instance of each resource type. Banker&#x27;s algorithm is used for such a system.</li></ul><ul id="c6383975-42cf-4062-b5aa-57a2add04186" class="bulleted-list"><li style="list-style-type:disc">When a new process enters the system, it must declare the maximum number of instances of each resource type that it may need. This number may not exceed the total number of resources in the system. When a user requests a set of resources, the system must determine whether the allocation of these resources will leave the system in a safe state. If it will, the resources are allocated; otherwise, the process must wait until some other process releases enough resources.</li></ul><h2 id="3bb72abf-791a-4402-a759-aa1f16df7c73" class=""><mark class="highlight-teal">Deadlock Detection</mark></h2><p id="d5c13d21-bb5c-4832-8fc6-3f88b39b5b33" class="">If a system does not employ either a deadlock-prevention or a deadlock-avoidance algorithm, then a deadlock may arise. Here, the system may provide:</p><ul id="c727f576-ad9a-40f3-954d-e06da4d0e2e8" class="bulleted-list"><li style="list-style-type:disc">An alogrithm that examines the state of the system to determine whether a deadlock has occured</li></ul><ul id="71cab040-4382-4b5b-a52d-16fa3a2ea230" class="bulleted-list"><li style="list-style-type:disc">An algorithm to recover from the deadlock.</li></ul><h3 id="4f58bc81-2135-45dc-ac80-4e3f01671c6b" class="">Single Instance of Each Resource Type</h3><ul id="45237943-28d2-4ab7-afca-009b65439049" class="bulleted-list"><li style="list-style-type:disc">Here, we use a variant of resource-allocation graph, called a <mark class="highlight-orange">wait-for</mark> graph.</li></ul><ul id="09b0771d-a850-48f6-8089-74e890be408b" class="bulleted-list"><li style="list-style-type:disc">We obtain this graph from the resource-allocation graph by removing the resource nodes &amp; collapsing the appropriate edges.</li></ul><ul id="acc2fbcc-e0c2-4530-9cdd-5ef706e16995" class="bulleted-list"><li style="list-style-type:disc">A deadlock exists in teh system if &amp; only if the wait-for graph contains a cycle.</li></ul><ul id="e21b5bc2-e7da-484f-8ccb-91355035159c" class="bulleted-list"><li style="list-style-type:disc">To detect deadlocks, the system needs to maintain the wait-for graph &amp; periodically invoke an algorithm that searches for a cycle in the graph.</li></ul><figure id="48407e19-eed0-4349-9105-42188dd4441c" class="image"><img style="width:432px" src="/images/blogs/operating_system/IMG_20210912_143608__01__01.jpg"/></figure><p id="ad7e7880-ec92-4cfb-93cd-3c1609a75ff5" class="">
</p></div></article><span class="sans" style="font-size:14px;padding-top:2em"></span></body></html>0:{"P":null,"b":"eGhdbBX9MQXjxImTzM5_M","p":"/portfolio","c":["","blogs","operating-system",""],"i":false,"f":[[["",{"children":["blogs",{"children":["operating-system",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/portfolio/_next/static/css/421c02c277670652.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","$L2",null,{"src":"https://kit.fontawesome.com/54803697a8.js","crossOrigin":"anonymous"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"stylesheet","type":"text/css","href":"https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css"}]]}],["$","body",null,{"children":["$","main",null,{"className":"__className_069388 min-h-screen flex flex-col","children":[["$","$L3",null,{}],["$","div",null,{"className":"w-11/12 md:w-10/12 m-auto mt-20 flex-grow","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"w-full","children":[["$","div",null,{"className":"flex flex-row md:flex-col items-center justify-around static md:fixed md:top-16 left-0 md:h-[90vh] z-0 md:z-10","children":[[["$","a","LinkedIn",{"href":"https://www.linkedin.com/in/notreallystatic/","target":"_blank","rel":"noreferrer","className":"text-foreground-700 hover:cursor-pointer hover:text-background-400 p-2 mx-4 inline-block","children":["$","i",null,{"className":"fab fa-brands fa-linkedin fa-2x"}]}],["$","a","Github",{"href":"https://github.com/notreallystatic","target":"_blank","rel":"noreferrer","className":"text-foreground-700 hover:cursor-pointer hover:text-background-400 p-2 mx-4 inline-block","children":["$","i",null,{"className":"fab fa-brands fa-github fa-2x"}]}],["$","a","Twitter",{"href":"https://twitter.com/notreallystatic","target":"_blank","rel":"noreferrer","className":"text-foreground-700 hover:cursor-pointer hover:text-background-400 p-2 mx-4 inline-block","children":["$","i",null,{"className":"fab fa-brands fa-twitter fa-2x"}]}],["$","a","Strava",{"href":"https://www.strava.com/athletes/notreallystatic","target":"_blank","rel":"noreferrer","className":"text-foreground-700 hover:cursor-pointer hover:text-background-400 p-2 mx-4 inline-block","children":["$","i",null,{"className":"fab fa-brands fa-strava fa-2x"}]}]],["$","a",null,{"href":"mailto:sachin.arbeit@gmail.com?subject=Hello!","className":"text-foreground-700 hover:cursor-pointer hover:text-background-400 p-2 inline-block","children":["$","i",null,{"className":"fas fa-envelope fa-2x"}]}]]}],["$","div",null,{"className":"text-center font-mono font-thin text-foreground-700 p-2 my-4","children":["$","p",null,{"children":"© 2025 Sachin Kumar"}]}]]}]]}]}]]}]]}],{"children":["blogs",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blogs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["operating-system",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blogs","children","operating-system","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","div",null,{"children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$6"}}]}],null,["$","$L7",null,{"children":"$L8"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","A2tJF6BXdb2vsqpWolHOp",{"children":[["$","$L9",null,{"children":"$La"}],["$","$Lb",null,{"children":"$Lc"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$d","$undefined"],"s":false,"S":true}
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"notreallystatic"}],["$","meta","2",{"name":"description","content":"Portoflio website of Sachin Kumar"}]]
8:null
